<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>记昨日书</title>
  
  <subtitle>忙碌把时光缩短, 苦难把岁月拉长</subtitle>
  <link href="https://xbmlz.github.io/atom.xml" rel="self"/>
  
  <link href="https://xbmlz.github.io/"/>
  <updated>2023-09-14T03:44:16.347Z</updated>
  <id>https://xbmlz.github.io/</id>
  
  <author>
    <name>xbmlz</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>FastReport Core Linux 中文支持</title>
    <link href="https://xbmlz.github.io/fastreport-core-linux-chinese/"/>
    <id>https://xbmlz.github.io/fastreport-core-linux-chinese/</id>
    <published>2023-09-14T11:30:12.000Z</published>
    <updated>2023-09-14T03:44:16.347Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-安装中文字体"><a href="#1-安装中文字体" class="headerlink" title="1. 安装中文字体"></a>1. 安装中文字体</h4><p>在Linux下创建中文字体目录</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /usr/share/fonts/chinese</span><br></pre></td></tr></table></figure><p>将Windows下<code>C:\Windows\Fonts\</code>中需要的字体拷贝到Linux中的<code>/usr/share/fonts/chinese/</code>下面</p><p>安装字体索引命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install mkfontscale</span><br></pre></td></tr></table></figure><p>进入中文字体目录生成字体索引</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span>  /usr/share/fonts/chinese</span><br><span class="line">mkfontscale</span><br></pre></td></tr></table></figure><p>验证安装</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fc-list :lang=zh</span><br></pre></td></tr></table></figure><p>如显示<code>/usr/share/fonts/chinese/</code>相关信息则表示中文字体安装成功</p><h4 id="2-启动FastReport服务"><a href="#2-启动FastReport服务" class="headerlink" title="2. 启动FastReport服务"></a>2. 启动FastReport服务</h4><p>设置中文字体目录的环境变量（解决问题的关键！！！）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> FONTDIR=/usr/share/fonts/</span><br></pre></td></tr></table></figure><p>启动服务即可…</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-安装中文字体&quot;&gt;&lt;a href=&quot;#1-安装中文字体&quot; class=&quot;headerlink&quot; title=&quot;1. 安装中文字体&quot;&gt;&lt;/a&gt;1. 安装中文字体&lt;/h4&gt;&lt;p&gt;在Linux下创建中文字体目录&lt;/p&gt;
&lt;figure class=&quot;highlight</summary>
      
    
    
    
    <category term="C#" scheme="https://xbmlz.github.io/categories/C/"/>
    
    
    <category term="fastreport" scheme="https://xbmlz.github.io/tags/fastreport/"/>
    
    <category term="C#" scheme="https://xbmlz.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Golang go get 国内镜像</title>
    <link href="https://xbmlz.github.io/golang-go-get-china/"/>
    <id>https://xbmlz.github.io/golang-go-get-china/</id>
    <published>2023-09-14T11:26:31.000Z</published>
    <updated>2023-09-14T03:44:16.347Z</updated>
    
    <content type="html"><![CDATA[<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>使用国内七牛云的 go module 镜像。</p><p>参考 <a href="https://github.com/goproxy/goproxy.cn%E3%80%82">https://github.com/goproxy/goproxy.cn。</a></p><p>golang 1.13 可以直接执行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go <span class="built_in">env</span> -w GO111MODULE=auto</span><br><span class="line">go <span class="built_in">env</span> -w GOPROXY=https://goproxy.cn,direct</span><br></pre></td></tr></table></figure><h2 id="阿里云-Go-Module-国内镜像仓库服务"><a href="#阿里云-Go-Module-国内镜像仓库服务" class="headerlink" title="阿里云 Go Module 国内镜像仓库服务"></a>阿里云 Go Module 国内镜像仓库服务</h2><p>除了七牛云，还可以使用阿里云的 golang 国内镜像。</p><p><a href="https://mirrors.aliyun.com/goproxy/">https://mirrors.aliyun.com/goproxy/</a></p><p>设置方法</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go <span class="built_in">env</span> -w GO111MODULE=auto</span><br><span class="line">go <span class="built_in">env</span> -w GOPROXY=https://mirrors.aliyun.com/goproxy/,direct</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;解决办法&quot;&gt;&lt;a href=&quot;#解决办法&quot; class=&quot;headerlink&quot; title=&quot;解决办法&quot;&gt;&lt;/a&gt;解决办法&lt;/h2&gt;&lt;p&gt;使用国内七牛云的 go module 镜像。&lt;/p&gt;
&lt;p&gt;参考 &lt;a href=&quot;https://github.com/g</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Windows XP SP3 下安装 Golang</title>
    <link href="https://xbmlz.github.io/golang-xp-sp3/"/>
    <id>https://xbmlz.github.io/golang-xp-sp3/</id>
    <published>2023-09-14T11:24:11.000Z</published>
    <updated>2023-09-14T03:44:16.347Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-安装-golang"><a href="#1-安装-golang" class="headerlink" title="1. 安装 golang"></a>1. 安装 golang</h2><p>目前支持Windows XP的最高版本是 <code>1.10.7</code></p><p>下载地址 <a href="https://studygolang.com/dl/golang/go1.10.7.windows-386.msi">https://studygolang.com/dl/golang/go1.10.7.windows-386.msi</a></p><h2 id="2-安装-git"><a href="#2-安装-git" class="headerlink" title="2. 安装 git"></a>2. 安装 git</h2><p>目前支持Windows XP的最高版本是 <code>2.10.0</code></p><p>下载地址 <a href="https://github.com/git-for-windows/git/releases/download/v2.10.0.windows.1/Git-2.10.0-32-bit.exe">https://github.com/git-for-windows/git/releases/download/v2.10.0.windows.1/Git-2.10.0-32-bit.exe</a></p><h2 id="3-配置环境变量"><a href="#3-配置环境变量" class="headerlink" title="3. 配置环境变量"></a>3. 配置环境变量</h2><p>在系统环境变量中添加如下内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GOPATH=C:\gopath</span><br><span class="line">GOROOT=C:\Go</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-安装-golang&quot;&gt;&lt;a href=&quot;#1-安装-golang&quot; class=&quot;headerlink&quot; title=&quot;1. 安装 golang&quot;&gt;&lt;/a&gt;1. 安装 golang&lt;/h2&gt;&lt;p&gt;目前支持Windows XP的最高版本是 &lt;code&gt;1.10.</summary>
      
    
    
    
    <category term="golang" scheme="https://xbmlz.github.io/categories/golang/"/>
    
    
    <category term="golang" scheme="https://xbmlz.github.io/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>Python3 离线部署应用</title>
    <link href="https://xbmlz.github.io/python-online-deploy/"/>
    <id>https://xbmlz.github.io/python-online-deploy/</id>
    <published>2023-09-14T10:15:43.000Z</published>
    <updated>2023-09-14T03:44:16.347Z</updated>
    
    <content type="html"><![CDATA[<h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>以下步骤需要在有网络的环境下操作</p><h4 id="1-下载Python-3-7-9-压缩文件"><a href="#1-下载Python-3-7-9-压缩文件" class="headerlink" title="1. 下载Python 3.7.9 压缩文件"></a>1. 下载Python 3.7.9 压缩文件</h4><p>下载<a href="https://www.python.org/ftp/python/3.7.9/python-3.7.9-embed-amd64.zip">Windows x86-64 embeddable zip file</a>并解压到<code>.runtime</code>目录下</p><h4 id="2-安装PIP"><a href="#2-安装PIP" class="headerlink" title="2. 安装PIP"></a>2. 安装PIP</h4><p>下载安装pip脚本，在浏览器打开下面地址，复制内容到<code>get-pip.py</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://bootstrap.pypa.io/get-pip.py</span><br></pre></td></tr></table></figure><p>在<code>.runtime</code>目录下执行如下命令</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python.exe get-pip.py</span><br></pre></td></tr></table></figure><p>修改<code>python37._pth</code>文件，将<code>import site</code>取消注释，完整文件内容如下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python37.<span class="built_in">zip</span></span><br><span class="line">.</span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment to run site.main() automatically</span></span><br><span class="line"><span class="keyword">import</span> site</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-下载项目所需依赖"><a href="#3-下载项目所需依赖" class="headerlink" title="3. 下载项目所需依赖"></a>3. 下载项目所需依赖</h4><p>将<code>.runtime</code>文件夹复制到项目根目录</p><p>在项目根目录下执行如下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.runtime\Python37\python.exe .runtime\Python37\Scripts\pip3.exe download -d .runtime\Packages\ -r requirements.txt</span><br></pre></td></tr></table></figure><p>到此，python离线环境已准备完毕</p><h3 id="离线部署"><a href="#离线部署" class="headerlink" title="离线部署"></a>离线部署</h3><p>以下步骤在离线环境下操作</p><h4 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1. 安装依赖"></a>1. 安装依赖</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.runtime\Python37\python.exe .runtime\Python37\Scripts\pip3.exe install --no-index --find-links=.runtime\Packages\ -r requirements.txt</span><br></pre></td></tr></table></figure><h4 id="2-启动项目"><a href="#2-启动项目" class="headerlink" title="2. 启动项目"></a>2. 启动项目</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.runtime\Python37\python.exe app.py</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h3&gt;&lt;p&gt;以下步骤需要在有网络的环境下操作&lt;/p&gt;
&lt;h4 id=&quot;1-下载Python-3-7-9-压缩文件&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    <category term="python" scheme="https://xbmlz.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://xbmlz.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>k8s集群安装</title>
    <link href="https://xbmlz.github.io/k8s-install/"/>
    <id>https://xbmlz.github.io/k8s-install/</id>
    <published>2023-04-18T13:32:56.000Z</published>
    <updated>2023-09-14T03:44:16.347Z</updated>
    
    <content type="html"><![CDATA[<p>Kubernetes（K8s）是一个开源的容器编排引擎，它支持自动化部署、大规模可伸缩、应用容器化管理。Kubernetes 项目由 Google（谷歌）发起并开源，现在由 Cloud Native Computing Foundation（CNCF）维护。Kubernetes 的目标是让部署容器化的应用简单并且高效（powerful）,Kubernetes 提供了应用部署、规划、更新、维护的一种机制，还提供了伸缩、弹性伸缩等功能</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><blockquote><p>需要准备3（2cpu2G）台虚拟机，192.168.1.10,192.168.1.11,192.168.1.12</p></blockquote><h3 id="主节点"><a href="#主节点" class="headerlink" title="主节点"></a>主节点</h3><ul><li>docker</li><li>kubectl集群命令行交互工具</li><li>kubeadm集群初始化工具</li></ul><h3 id="工作节点"><a href="#工作节点" class="headerlink" title="工作节点"></a>工作节点</h3><ul><li>docker</li><li>kubelet管理Pod和容器，确保他们稳定运行</li><li>kube-proxy网络代理，负责网络相关的工作</li></ul><h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><h3 id="环境设置"><a href="#环境设置" class="headerlink" title="环境设置"></a>环境设置</h3><p>每个节点分别修改对应的主机名</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname master</span><br><span class="line">hostnamectl set-hostname node1</span><br><span class="line">hostnamectl set-hostname node2</span><br></pre></td></tr></table></figure><p>所有节点修改hosts, 添加如下内容</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/hosts</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">192.168.1.10 master</span><br><span class="line">192.168.1.11 node1</span><br><span class="line">192.168.1.12 node2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所有节点关闭 SELinux</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">sed -i --follow-symlinks <span class="string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> /etc/sysconfig/selinux</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所有节点关闭swap</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -ri <span class="string">&#x27;s/.*swap.*/#&amp;/&#x27;</span> /etc/fstab</span><br><span class="line">swapoff  -a</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所有节点关闭防火墙</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> --now firewalld</span><br></pre></td></tr></table></figure><p>所有节点修改阿里镜像</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 备份</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /etc/yum.repos.d/bak</span><br><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d</span><br><span class="line"><span class="built_in">mv</span> * /etc/yum.repos.d/bak</span><br><span class="line"><span class="comment"># 添加阿里源</span></span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"><span class="comment"># 清空并重建缓存</span></span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所有节点添加k8s源</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br><span class="line"><span class="string">repo_gpgcheck=0</span></span><br><span class="line"><span class="string">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>所有节点添加docker源</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h3 id="安装k8s组件"><a href="#安装k8s组件" class="headerlink" title="安装k8s组件"></a>安装k8s组件</h3><p>所有节点安装所需组件</p><blockquote><p>必须安装1.24.x以下的版本，k8s在1.24.x及以上版本已放弃使用docker作为容器</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y kubelet-1.23.17 kubectl-1.23.17 kubeadm-1.23.17 docker-ce</span><br></pre></td></tr></table></figure><p>修改docker配置</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt; /etc/docker/daemon.json</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;data-root&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/home/docker&quot;</span><span class="punctuation">,</span> </span><br><span class="line">    <span class="attr">&quot;exec-opts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;native.cgroupdriver=systemd&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;https://registry.docker-cn.com&quot;</span><span class="punctuation">,</span> </span><br><span class="line">        <span class="string">&quot;http://hub-mirror.c.163.com&quot;</span><span class="punctuation">,</span> </span><br><span class="line">        <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>所有节点加载所需容器模块</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; /etc/modules-load.d/containerd.conf</span></span><br><span class="line"><span class="string">overlay</span></span><br><span class="line"><span class="string">br_netfilter</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">modprobe overlay</span><br><span class="line">modprobe br_netfilter</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所有节点配置网络</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; /etc/sysctl.d/kubernetes.conf</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables = 1</span></span><br><span class="line"><span class="string">net.ipv4.ip_forward = 1</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl --system</span><br></pre></td></tr></table></figure><p>所有节点启动kubelet、docker，并设置开机自启</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start kubelet</span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在主节点编辑kubelet配置</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; /etc/default/kubelet</span></span><br><span class="line"><span class="string">KUBELET_EXTRA_ARGS=&quot;--cgroup-driver=systemd&quot;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart kubelet</span><br></pre></td></tr></table></figure><p>在主节点编辑kubeadm 配置文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br></pre></td></tr></table></figure><p>添加如下内容</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Environment=<span class="string">&quot;KUBELET_EXTRA_ARGS=--fail-swap-on=false&quot;</span></span><br></pre></td></tr></table></figure><h3 id="初始化k8s"><a href="#初始化k8s" class="headerlink" title="初始化k8s"></a>初始化k8s</h3><p>在主节点初始化集群</p><blockquote><p> kubelet 只能使用 Docker CRI v1 runtime，而 containerd 默认使用了 CRI v2 runtime</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化集群控制台 Control plane</span></span><br><span class="line"><span class="comment"># 失败了可以用 kubeadm reset 重置</span></span><br><span class="line">kubeadm init --apiserver-advertise-address=$(hostname -i) \</span><br><span class="line">--apiserver-cert-extra-sans=127.0.0.1 \</span><br><span class="line">--pod-network-cidr=10.244.0.0/16 \</span><br><span class="line">--image-repository=registry.aliyuncs.com/google_containers</span><br><span class="line"></span><br><span class="line"><span class="comment"># 记得把 kubeadm join xxx 保存起来</span></span><br><span class="line"><span class="comment"># 忘记了重新获取：kubeadm token create --print-join-command</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制授权文件，以便 kubectl 可以有权限访问集群</span></span><br><span class="line"><span class="comment"># 如果你其他节点需要访问集群，需要从主节点复制这个文件过去其他节点</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在其他机器上创建 ~/.kube/config 文件也能通过 kubectl 访问到集群</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输入以下内容创建k8s集群目录</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line"><span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"><span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure><h3 id="添加工作节点"><a href="#添加工作节点" class="headerlink" title="添加工作节点"></a>添加工作节点</h3><p>在主节点复制配置到子节点</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp -r /etc/kubernetes/admin.conf node1:/etc/kubernetes/admin.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp -r /etc/kubernetes/admin.conf node2:/etc/kubernetes/admin.conf</span><br></pre></td></tr></table></figure><p>在子节点配置环境变量</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;export KUBECONFIG=/etc/kubernetes/admin.conf&quot;</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将子节点加入到集群</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm <span class="built_in">join</span> 192.168.1.10:6443 --token lptfl6.oy8gag26iz0vu37f \</span><br><span class="line">  --discovery-token-ca-cert-hash sha256:cdfbf4490f212f38ff82f73d5d91340e44e273cf5c16f1729110af0d4c932c4b</span><br></pre></td></tr></table></figure><p>在主节点输入如下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get nodes</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@master /]<span class="comment"># kubectl get nodes</span></span><br><span class="line">NAME     STATUS     ROLES                  AGE     VERSION</span><br><span class="line">master   NotReady   control-plane,master   8m37s   v1.23.17</span><br><span class="line">node1    NotReady   &lt;none&gt;                 62s     v1.23.17</span><br><span class="line">node2    NotReady   &lt;none&gt;                 48s     v1.23.17</span><br></pre></td></tr></table></figure><h3 id="安装网络插件"><a href="#安装网络插件" class="headerlink" title="安装网络插件"></a>安装网络插件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f https://ghproxy.com/https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="配置Dashboard"><a href="#配置Dashboard" class="headerlink" title="配置Dashboard"></a>配置Dashboard</h3><p><a href="https://github.com/kubernetes/dashboard">https://github.com/kubernetes/dashboard</a></p><p>下载安装文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">curl -O https://ghproxy.com/https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改kind.spec.type为NodePort</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8443</span></span><br><span class="line">      <span class="attr">nodePort:</span> <span class="number">31443</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>安装dashboard</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f recommended.yaml</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@master opt]<span class="comment"># kubectl apply -f recommended.yaml</span></span><br><span class="line">namespace/kubernetes-dashboard created</span><br><span class="line">serviceaccount/kubernetes-dashboard created</span><br><span class="line">service/kubernetes-dashboard created</span><br><span class="line">secret/kubernetes-dashboard-certs created</span><br><span class="line">secret/kubernetes-dashboard-csrf created</span><br><span class="line">secret/kubernetes-dashboard-key-holder created</span><br><span class="line">configmap/kubernetes-dashboard-settings created</span><br><span class="line">role.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">deployment.apps/kubernetes-dashboard created</span><br><span class="line">service/dashboard-metrics-scraper created</span><br><span class="line">deployment.apps/dashboard-metrics-scraper created</span><br></pre></td></tr></table></figure><p>在浏览器打开<a href="http://192.168.1.10:31443就可以访问k8s">http://192.168.1.10:31443就可以访问k8s</a> dashboard了</p><p><img src="https://secure2.wostatic.cn/static/dH89FGHQaM3gpoh7sgy5Cc/image.png?auth_key=1681795904-o14LbFaUeKVqEb8t7s6jiB-0-d1422c14ad721cbf1475faeeaff7c660"></p><h3 id="创建dashboard登录token"><a href="#创建dashboard登录token" class="headerlink" title="创建dashboard登录token"></a>创建dashboard登录token</h3><p>创建一个ServiceAccount: dashboard-admin</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create serviceaccount dashboard-admin -n kubernetes-dashboard</span><br></pre></td></tr></table></figure><p>将dashboard-admin 绑定到集群管理角色</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create clusterrolebinding dashboard-cluster-admin --clusterrole=cluster-admin --serviceaccount=kubernetes-dashboard:dashboard-admin</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查看dashboard-admin的登陆Token</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get secret -n kubernetes-dashboard</span><br><span class="line">kubectl describe secret dashboard-admin-token-5pglz -n kubernetes-dashboard</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如下所示</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@master opt]<span class="comment"># kubectl get secret -n kubernetes-dashboard</span></span><br><span class="line">NAME                               TYPE                                  DATA   AGE</span><br><span class="line">dashboard-admin-token-kq7mk        kubernetes.io/service-account-token   3      10s</span><br><span class="line">default-token-fj4rh                kubernetes.io/service-account-token   3      12m</span><br><span class="line">kubernetes-dashboard-certs         Opaque                                0      12m</span><br><span class="line">kubernetes-dashboard-csrf          Opaque                                1      12m</span><br><span class="line">kubernetes-dashboard-key-holder    Opaque                                2      12m</span><br><span class="line">kubernetes-dashboard-token-hmfp9   kubernetes.io/service-account-token   3      12m</span><br><span class="line">[root@master opt]<span class="comment"># kubectl describe secret dashboard-admin-token-kq7mk -n kubernetes-dashboard</span></span><br><span class="line">Name:         dashboard-admin-token-kq7mk</span><br><span class="line">Namespace:    kubernetes-dashboard</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  kubernetes.io/service-account.name: dashboard-admin</span><br><span class="line">              kubernetes.io/service-account.uid: 1e672d9b-1f51-4725-bced-0e601fb0c7a5</span><br><span class="line"></span><br><span class="line">Type:  kubernetes.io/service-account-token</span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">token:      eyJhbGciOiJSUzI1NiIsImtpZCI6IktobGdiSzUzUkxXek1FSU00Y1Q5WGd0Ml9fWl9ZcFJGc3VpQWprZFZiTTQifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYXNoYm9hcmQtYWRtaW4tdG9rZW4ta3E3bWsiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGFzaGJvYXJkLWFkbWluIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiMWU2NzJkOWItMWY1MS00NzI1LWJjZWQtMGU2MDFmYjBjN2E1Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmVybmV0ZXMtZGFzaGJvYXJkOmRhc2hib2FyZC1hZG1pbiJ9.T8cbJzgUXD8yLUKp-Hec3ISFrIwXT9B8yN5gwQQKhlVdYXpkB3WWZ542lC0UA4GufGEwhJHMmMEdllHxYgemmcFin28AeUxP2EqDOYYHiGlR-2kWNOYGOqzL-fEuaQnYjngk_GJJRLXIZkHbDuBO6s5HWd8i8BQvKzE5SECedf0JxwwsEzObRY6z6UR1Zd25mePba2qXCW9UBgx-m07GrbO_DPbhC9hN_-lsHEivQ_WaTAkybWJruHjy5MYI9wCx1Pc7JdVQm07p3HAZAt6ft6-CObM9-jkviIOYyCC6F174yMW5Ty_rRzP7kmVanLP_wPdnnnziLMcmKz6bbg6hRw</span><br><span class="line">ca.crt:     1099 bytes</span><br><span class="line">namespace:  20 bytes</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="初始化报错"><a href="#初始化报错" class="headerlink" title="初始化报错"></a>初始化报错</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[init] Using Kubernetes version: v1.24.1</span><br><span class="line">[preflight] Running pre-flight checks</span><br><span class="line">error execution phase preflight: [preflight] Some fatal errors occurred:</span><br><span class="line">        [ERROR CRI]: container runtime is not running: output: time=<span class="string">&quot;2023-01-19T15:05:35Z&quot;</span> level=fatal msg=<span class="string">&quot;validate service connection: CRI v1 runtime API is not implemented for endpoint \&quot;unix:///var/run/containerd/containerd.sock\&quot;: rpc error: code = Unimplemented desc = unknown service runtime.v1.RuntimeService&quot;</span></span><br><span class="line">, error: <span class="built_in">exit</span> status 1</span><br><span class="line">[preflight] If you know what you are doing, you can make a check non-fatal with `--ignore-preflight-errors=...`</span><br><span class="line">To see the stack trace of this error execute with --v=5 or higher</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum remove -y containerd</span><br><span class="line">yum update -y </span><br><span class="line">yum install -y containerd.io</span><br><span class="line"><span class="built_in">rm</span> -rf /etc/containerd/config.toml</span><br><span class="line">systemctl restart containerd</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="忘了加入节点命令"><a href="#忘了加入节点命令" class="headerlink" title="忘了加入节点命令"></a>忘了加入节点命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm token create --print-join-command</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Kubernetes（K8s）是一个开源的容器编排引擎，它支持自动化部署、大规模可伸缩、应用容器化管理。Kubernetes 项目由 Google（谷歌）发起并开源，现在由 Cloud Native Computing Foundation（CNCF）维护。Kubernet</summary>
      
    
    
    
    <category term="devOps" scheme="https://xbmlz.github.io/categories/devOps/"/>
    
    <category term="k8s" scheme="https://xbmlz.github.io/categories/devOps/k8s/"/>
    
    
    <category term="devOps" scheme="https://xbmlz.github.io/tags/devOps/"/>
    
  </entry>
  
  <entry>
    <title>Linux下使用Clash</title>
    <link href="https://xbmlz.github.io/linux-clash/"/>
    <id>https://xbmlz.github.io/linux-clash/</id>
    <published>2023-04-16T21:03:53.000Z</published>
    <updated>2023-09-14T03:44:16.347Z</updated>
    
    <content type="html"><![CDATA[<p>Clash官方地址</p><p><a href="https://github.com/Dreamacro/clash/releases">Releases · Dreamacro&#x2F;clash (github.com)</a></p><h3 id="下载-Clash"><a href="#下载-Clash" class="headerlink" title="下载 Clash"></a>下载 Clash</h3><p>新建安装目录</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /opt/clash</span><br></pre></td></tr></table></figure><p>下载clash</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/Dreamacro/clash/releases/download/v1.7.1/clash-linux-amd64-v1.7.1.gz -O /opt/clash/clash-linux-amd64-v1.7.1.gz</span><br></pre></td></tr></table></figure><p>解压</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gunzip /opt/clash/clash-linux-amd64-v1.7.1.gz</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重命名</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /opt/clash/clash-linux-amd64-v1.7.1 /opt/clash/clash</span><br></pre></td></tr></table></figure><h3 id="配置并运行Clash"><a href="#配置并运行Clash" class="headerlink" title="配置并运行Clash"></a>配置并运行Clash</h3><p>下载配置文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O /opt/clash/config.yaml [订阅链接]</span><br></pre></td></tr></table></figure><p>授权clash</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x clash</span><br></pre></td></tr></table></figure><p>启动clash</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ./clash -d .</span><br></pre></td></tr></table></figure><h3 id="启动系统代理"><a href="#启动系统代理" class="headerlink" title="启动系统代理"></a>启动系统代理</h3><blockquote><p>以下命令适用于Gnome桌面环境</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gsettings <span class="built_in">set</span> org.gnome.system.proxy mode <span class="string">&#x27;manual&#x27;</span></span><br><span class="line">gsettings <span class="built_in">set</span> org.gnome.system.proxy.http port 7890</span><br><span class="line">gsettings <span class="built_in">set</span> org.gnome.system.proxy.http host <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">gsettings <span class="built_in">set</span> org.gnome.system.proxy.socks port 7891</span><br><span class="line">gsettings <span class="built_in">set</span> org.gnome.system.proxy.socks host <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">gsettings <span class="built_in">set</span> org.gnome.system.proxy ignore-hosts <span class="string">&quot;[&#x27;localhost&#x27;, &#x27;127.0.0.0/8&#x27;, &#x27;::1&#x27;]&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="配置开机启动"><a href="#配置开机启动" class="headerlink" title="配置开机启动"></a>配置开机启动</h3><p>新建系统服务文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/systemd/system/clash.service &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=clash daemon</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=simple</span></span><br><span class="line"><span class="string">User=root</span></span><br><span class="line"><span class="string">ExecStart=/opt/clash/clash -d /opt/clash/</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>重载配置</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>启动Clash</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start clash.service</span><br></pre></td></tr></table></figure><p>配置开机启动</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> clash.service</span><br></pre></td></tr></table></figure><h3 id="配置订阅定时更新"><a href="#配置订阅定时更新" class="headerlink" title="配置订阅定时更新"></a>配置订阅定时更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><p>填入以下内容</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">29 6    * * *   root    pgrep clash | xargs <span class="built_in">kill</span> -s 9 </span><br><span class="line">30 6    * * *   root    <span class="built_in">mv</span> /opt/clash/config.yaml /opt/clash/configbackup.yaml </span><br><span class="line">31 6    * * *   root    wget -P /opt/clash/ -O config.yaml [你的订阅链接]</span><br><span class="line">32 6    * * *   root    <span class="built_in">nohup</span> /opt/clash/clash -d /opt/clash/</span><br></pre></td></tr></table></figure><p>重启定时任务使之生效</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart crond.service</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Clash官方地址&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Dreamacro/clash/releases&quot;&gt;Releases · Dreamacro&amp;#x2F;clash (github.com)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;下载-Cl</summary>
      
    
    
    
    <category term="开发" scheme="https://xbmlz.github.io/categories/%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="开发" scheme="https://xbmlz.github.io/tags/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>MariaDB 主从同步</title>
    <link href="https://xbmlz.github.io/mariadb-master-slave-sync/"/>
    <id>https://xbmlz.github.io/mariadb-master-slave-sync/</id>
    <published>2022-12-02T12:16:14.000Z</published>
    <updated>2023-09-14T03:44:16.347Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-准备两台服务器"><a href="#1-准备两台服务器" class="headerlink" title="1. 准备两台服务器"></a>1. 准备两台服务器</h3><ul><li>master (主服务器192.168.23.132)</li><li>slave  (从服务器192.168.23.133)</li></ul><h3 id="2-安装MariaDB"><a href="#2-安装MariaDB" class="headerlink" title="2. 安装MariaDB"></a>2. 安装MariaDB</h3><p>注意：此步骤在主、从服务器执行同样的操作即可</p><p>新建安装脚本：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi install-mariadb.sh</span><br></pre></td></tr></table></figure><p>加入以下内容:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">MARIADB_DIR=/usr/local/mariadb</span><br><span class="line">DATA_DIR=/data/mariadb</span><br><span class="line">MARIADB_VER=10.3.27</span><br><span class="line">ROOT_PASSWORD=123456</span><br><span class="line"></span><br><span class="line">yum -y install wget</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据存放目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$&#123;DATA_DIR&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建mysql的用户做为mariadb的运行用户</span></span><br><span class="line">useradd -r mysql -s /sbin/nologin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载</span></span><br><span class="line"><span class="built_in">cd</span> /usr/local/src</span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/mariadb/mariadb-<span class="variable">$&#123;MARIADB_VER&#125;</span>/bintar-linux-systemd-x86_64/mariadb-<span class="variable">$&#123;MARIADB_VER&#125;</span>-linux-systemd-x86_64.tar.gz</span><br><span class="line"></span><br><span class="line">tar -zxvf mariadb-<span class="variable">$&#123;MARIADB_VER&#125;</span>-linux-systemd-x86_64.tar.gz </span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> mariadb-<span class="variable">$&#123;MARIADB_VER&#125;</span>-linux-systemd-x86_64 <span class="variable">$&#123;MARIADB_DIR&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ln</span> -s <span class="variable">$&#123;MARIADB_DIR&#125;</span> /usr/local/mysql</span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> -R mysql.mysql /usr/local/mysql/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权</span></span><br><span class="line"><span class="built_in">chown</span> -R mysql.mysql <span class="variable">$&#123;DATA_DIR&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># my.conf configuration</span></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/my.cnf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[mysqld]</span></span><br><span class="line"><span class="string">port            = 3306</span></span><br><span class="line"><span class="string">character-set-server = utf8</span></span><br><span class="line"><span class="string">collation-server = utf8_general_ci</span></span><br><span class="line"><span class="string">datadir = $&#123;DATA_DIR&#125;</span></span><br><span class="line"><span class="string">socket = /tmp/mysql.sock</span></span><br><span class="line"><span class="string">skip-external-locking</span></span><br><span class="line"><span class="string">key_buffer_size = 384M</span></span><br><span class="line"><span class="string">max_allowed_packet = 1M</span></span><br><span class="line"><span class="string">table_open_cache = 512</span></span><br><span class="line"><span class="string">sort_buffer_size = 2M</span></span><br><span class="line"><span class="string">read_buffer_size = 2M</span></span><br><span class="line"><span class="string">read_rnd_buffer_size = 8M</span></span><br><span class="line"><span class="string">myisam_sort_buffer_size = 64M</span></span><br><span class="line"><span class="string">thread_cache_size = 8</span></span><br><span class="line"><span class="string">query_cache_size = 32M</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;MARIADB_DIR&#125;</span></span><br><span class="line"></span><br><span class="line">./scripts/mysql_install_db --datadir=<span class="variable">$&#123;DATA_DIR&#125;</span> --user=mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机自启动</span></span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$&#123;MARIADB_DIR&#125;</span>/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line"></span><br><span class="line">chkconfig --add mysqld</span><br><span class="line"></span><br><span class="line">chkconfig mysqld on</span><br><span class="line"></span><br><span class="line">service mysqld start</span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;MARIADB_DIR&#125;</span>/bin/mysql -e <span class="string">&quot;grant all privileges on *.* to root@&#x27;127.0.0.1&#x27; identified by \&quot;<span class="variable">$&#123;ROOT_PASSWORD&#125;</span>\&quot; with grant option;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;MARIADB_DIR&#125;</span>/bin/mysql -e <span class="string">&quot;grant all privileges on *.* to root@&#x27;localhost&#x27; identified by \&quot;<span class="variable">$&#123;ROOT_PASSWORD&#125;</span>\&quot; with grant option;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;MARIADB_DIR&#125;</span>/bin/mysql -uroot -p<span class="variable">$&#123;ROOT_PASSWORD&#125;</span> -e <span class="string">&quot;delete from mysql.user where Password=&#x27;&#x27;;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;MARIADB_DIR&#125;</span>/bin/mysql -uroot -p<span class="variable">$&#123;ROOT_PASSWORD&#125;</span> -e <span class="string">&quot;delete from mysql.db where User=&#x27;&#x27;;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;MARIADB_DIR&#125;</span>/bin/mysql -uroot -p<span class="variable">$&#123;ROOT_PASSWORD&#125;</span> -e <span class="string">&quot;delete from mysql.proxies_priv where Host!=&#x27;localhost&#x27;;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;MARIADB_DIR&#125;</span>/bin/mysql -uroot -p<span class="variable">$&#123;ROOT_PASSWORD&#125;</span> -e <span class="string">&quot;drop database test;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;PATH=/usr/local/mysql/bin:$PATH&#x27;</span> &gt;&gt; /etc/profile.d/mysql.sh</span><br><span class="line"><span class="comment"># 刷新环境变量</span></span><br><span class="line">. /etc/profile.d/mysql.sh</span><br></pre></td></tr></table></figure><p>执行安装：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash install-mariadb.sh</span><br></pre></td></tr></table></figure><h3 id="3-主库配置-在master服务器操作"><a href="#3-主库配置-在master服务器操作" class="headerlink" title="3. 主库配置(在master服务器操作)"></a>3. 主库配置(在master服务器操作)</h3><p>修改mariadb配置文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/my.cnf</span><br></pre></td></tr></table></figure><p>在[mysqld]节点下添加如下配置</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#集群配置 - 主服务器</span></span><br><span class="line">server-id = 1 //配置server-id,不能和从库重复</span><br><span class="line">read_only = 0 //0表示可读可写，1表示只读（也可写成on）</span><br><span class="line"><span class="comment"># binlog-do-db = Test //只记录Test库变化,多个库用‘,’分隔</span></span><br><span class="line">binlog-ignore-db = mysql //忽略mysql库变化，多个库用‘,’分隔</span><br><span class="line">log-bin = /var/lib/mysql/master-bin.log</span><br></pre></td></tr></table></figure><p>重启mariadb</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service mysqld restart</span><br></pre></td></tr></table></figure><p>创建同步数据所需要的用户，并记录文件信息</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 登录数据库</span></span><br><span class="line">mysql -u root -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 slave 用户</span></span><br><span class="line">CREATE USER <span class="string">&#x27;slave&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分配 REPLICATION SLAVE 权限</span></span><br><span class="line">GRANT REPLICATION SLAVE ON *.* TO <span class="string">&#x27;slave&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷新权限表</span></span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用读锁</span></span><br><span class="line">FLUSH TABLES WITH READ LOCK;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出主服务器的状态</span></span><br><span class="line">SHOW MASTER STATUS;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xbmlz/static/img/202212021217371.png"></p><p>记录文件信息, 从库配会用到</p><ul><li>File: master-bin.000001 </li><li>Position: 329</li></ul><h3 id="4-从库配置-在slave服务器操作"><a href="#4-从库配置-在slave服务器操作" class="headerlink" title="4. 从库配置(在slave服务器操作)"></a>4. 从库配置(在slave服务器操作)</h3><p>修改mariadb配置文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/my.cnf</span><br></pre></td></tr></table></figure><p>在[mysqld]节点下添加如下配置</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 集群配置 - 从服务器  </span></span><br><span class="line">server-id = 2</span><br><span class="line"><span class="comment"># binlog-do-db = Test //只记录Test库变化,多个库用‘,’分隔</span></span><br><span class="line"><span class="comment"># binlog-ignore-db = mysql</span></span><br><span class="line">read_only = 1 //0表示可读可写，1表示只读（也可写成on）</span><br></pre></td></tr></table></figure><p>重启mariadb</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service mysqld restart</span><br></pre></td></tr></table></figure><p>登录从服务器mariadb, 修改 SLAVE 配置</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入数据库</span></span><br><span class="line">mysql -u root -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 SLAVE</span></span><br><span class="line">CHANGE MASTER TO</span><br><span class="line">MASTER_HOST=<span class="string">&#x27;192.168.23.132&#x27;</span>,</span><br><span class="line">MASTER_USER=<span class="string">&#x27;slave&#x27;</span>,</span><br><span class="line">MASTER_PASSWORD=<span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">MASTER_PORT=3306,</span><br><span class="line">MASTER_LOG_FILE=<span class="string">&#x27;master-bin.000001 &#x27;</span>, <span class="comment"># 主服务器数据库文件名称</span></span><br><span class="line">MASTER_LOG_POS=329, <span class="comment"># 主服务器数据库文件定位                 </span></span><br><span class="line">MASTER_CONNECT_RETRY=10;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动进程</span></span><br><span class="line">start slave;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 查看进程状态</span></span><br><span class="line">SHOW SLAVE STATUS\G;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-解除主服务数据库锁定"><a href="#5-解除主服务数据库锁定" class="headerlink" title="5. 解除主服务数据库锁定"></a>5. 解除主服务数据库锁定</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 登录数据库</span></span><br><span class="line">mysql -u root -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主服务器解除读锁</span></span><br><span class="line">UNLOCK TABLES;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出会话</span></span><br><span class="line">quit</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-准备两台服务器&quot;&gt;&lt;a href=&quot;#1-准备两台服务器&quot; class=&quot;headerlink&quot; title=&quot;1. 准备两台服务器&quot;&gt;&lt;/a&gt;1. 准备两台服务器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;master (主服务器192.168.23.132)&lt;/li&gt;
&lt;</summary>
      
    
    
    
    <category term="database" scheme="https://xbmlz.github.io/categories/database/"/>
    
    
    <category term="mariadb" scheme="https://xbmlz.github.io/tags/mariadb/"/>
    
  </entry>
  
  <entry>
    <title>MariaDB Galera Cluster 集群部署</title>
    <link href="https://xbmlz.github.io/mariadb-galera-cluster/"/>
    <id>https://xbmlz.github.io/mariadb-galera-cluster/</id>
    <published>2022-12-02T12:11:35.000Z</published>
    <updated>2023-09-14T03:44:16.347Z</updated>
    
    <content type="html"><![CDATA[<h3 id="MariaDB-Galera-Cluster-介绍"><a href="#MariaDB-Galera-Cluster-介绍" class="headerlink" title="MariaDB Galera Cluster 介绍"></a>MariaDB Galera Cluster 介绍</h3><p>Galera Cluster是Codership公司开发的一套免费开源的高可用方案，Galera Cluster即安装了Galera的Mariadb集群。其本身具有multi-master特性，支持多点写入。Galera Cluster的三个（或多个）节点是对等关系，每个节点均支持写入，集群内部会保证写入数据的一致性与完整性。</p><p>官网：<a href="http://galeracluster.com/">http://galeracluster.com</a></p><p>文档：<a href="https://galeracluster.com/library/documentation/index.html">https://galeracluster.com/library/documentation/index.html</a></p><p>优势：</p><ul><li>真正的多主集群，Active-Active架构，即所有节点可以同时读写数据库</li><li>同步复制，没有复制延迟</li><li>多线程复制</li><li>没有主从切换操作，无需使用虚IP</li><li>热备份，单个节点故障期间不会影响数据库业务</li><li>支持节点自动加入，无需手动拷贝数据，自动的节点成员控制,失效节点自动被清除;新节点加入数据自动复制</li><li>支持InnoDB存储引擎</li><li>对应用程序透明，原生MySQL接口</li><li>无需做读写分离</li><li>部署使用简单</li></ul><p>缺点：</p><ul><li>加入新节点时开销大,需要复制完整数据</li><li>不能有效地解决写扩展的问题,所有的写操作都发生在所有的节点</li><li>有多少个节点,就有多少份重复的数据</li><li>由于事务提交需要跨节点通信,即涉及分布式事务操作,因此写入会比主从复制慢很多,节点越多,写入越慢,死锁和回滚也会更加频繁;</li><li>对网络要求比较高,如果网络出现波动不稳定,则可能会造成两个节点失联,Galera Cluster集群会发生脑裂,服务将不可用</li><li>仅支持InnoDB&#x2F;XtraDB存储引擎,任何写入其他引擎的表,包括mysql.*表都不会被复制,DDL语句可以复制,但是insert into mysql.user(MyISAM存储引擎)之类的插入数据不会被复制</li><li>Delete操作不支持没有主键的表,因为没有主键的表在不同的节点上的顺序不同,如果执行select … limit …将出现不同的结果集</li><li>整个集群的写入吞吐量取决于最弱的节点限制,集群要使用同一的配置</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xbmlz/static/img/202212021213506.png"></p><p>基于认证的复制原理</p><p><a href="https://galeracluster.com/library/documentation/tech-desc-introduction.html">https://galeracluster.com/library/documentation/tech-desc-introduction.html</a></p><p>Galera集群的复制功能基于Galeralibrary实现,为了让MySQL与Galera library通讯，特别针对MySQL开发了wsrep API。</p><p>Galera插件保证集群同步数据，保持数据的一致性，靠的就是可认证的复制，工作原理如下图：</p><h3 id="集群部署"><a href="#集群部署" class="headerlink" title="集群部署"></a>集群部署</h3><p><img src="https://cdn.jsdelivr.net/gh/xbmlz/static/img/202212021214471.png"></p><h4 id="准备3台Centos7"><a href="#准备3台Centos7" class="headerlink" title="准备3台Centos7"></a>准备3台Centos7</h4><table><thead><tr><th>名称</th><th>IP地址</th></tr></thead><tbody><tr><td>galera1</td><td>10.0.2.191</td></tr><tr><td>galera2</td><td>10.0.2.192</td></tr><tr><td>galera3</td><td>10.0.2.193</td></tr></tbody></table><h4 id="关闭防火墙和selinxu"><a href="#关闭防火墙和selinxu" class="headerlink" title="关闭防火墙和selinxu"></a>关闭防火墙和selinxu</h4><p>在<code>galera1</code>、<code>galera2</code>、<code>galera3</code>分别执行如下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> --now firewalld</span><br><span class="line">sed -i <span class="string">&#x27;s/^SELINUX=enforcing$/SELINUX=disabled/&#x27;</span> /etc/selinux/config &amp;&amp; setenforce 0</span><br></pre></td></tr></table></figure><h4 id="配置主机名"><a href="#配置主机名" class="headerlink" title="配置主机名"></a>配置主机名</h4><p>在<code>galera1</code>、<code>galera2</code>、<code>galera3</code>分别执行如下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname &lt;galera1、galera2、galera3&gt;</span><br></pre></td></tr></table></figure><h4 id="配置主机名解析"><a href="#配置主机名解析" class="headerlink" title="配置主机名解析"></a>配置主机名解析</h4><p>在<code>galera1</code>、<code>galera2</code>、<code>galera3</code>分别执行如下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/hosts &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">10.0.2.191 galera1</span></span><br><span class="line"><span class="string">10.0.2.192 galera2</span></span><br><span class="line"><span class="string">10.0.2.193 galera3</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h4 id="安装MariaDB"><a href="#安装MariaDB" class="headerlink" title="安装MariaDB"></a>安装MariaDB</h4><p>在<code>galera1</code>、<code>galera2</code>、<code>galera3</code>分别执行如下命令</p><p>配置yum</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/yum.repos.d/mariadb.repo &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[mariadb]</span></span><br><span class="line"><span class="string">name=MariaDB</span></span><br><span class="line"><span class="string">baseurl=http://mirrors.ustc.edu.cn/mariadb/yum/10.3/centos7-amd64</span></span><br><span class="line"><span class="string">gpgkey=https://mirrors.ustc.edu.cn/mariadb/yum/RPM-GPG-KEY-MariaDB</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>安装mariadb、galera和rsync,其中galera作为依赖自动安装</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y MariaDB-server MariaDB-client rsync</span><br></pre></td></tr></table></figure><h4 id="配置mariadb-galera-cluste"><a href="#配置mariadb-galera-cluste" class="headerlink" title="配置mariadb-galera-cluste"></a>配置mariadb-galera-cluste</h4><p><a href="https://mariadb.com/kb/en/configuring-mariadb-galera-cluster/">https://mariadb.com/kb/en/configuring-mariadb-galera-cluster/</a></p><p><a href="https://galeracluster.com/library/training/tutorials/galera-on-aws.html">https://galeracluster.com/library/training/tutorials/galera-on-aws.html</a></p><p>在<code>galera1</code>节点执行如下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/my.cnf.d/server.cnf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[mysqld]</span></span><br><span class="line"><span class="string">datadir=/var/lib/mysql</span></span><br><span class="line"><span class="string">socket=/var/lib/mysql/mysql.sock</span></span><br><span class="line"><span class="string">bind-address=0.0.0.0</span></span><br><span class="line"><span class="string">user=mysql</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">default_storage_engine=InnoDB</span></span><br><span class="line"><span class="string">innodb_autoinc_lock_mode=2</span></span><br><span class="line"><span class="string">innodb_flush_log_at_trx_commit=0</span></span><br><span class="line"><span class="string">innodb_buffer_pool_size=128M</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">binlog_format=ROW</span></span><br><span class="line"><span class="string">log-error=/var/log/mysqld.log</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[galera]</span></span><br><span class="line"><span class="string">wsrep_on=ON</span></span><br><span class="line"><span class="string">wsrep_provider=/usr/lib64/galera/libgalera_smm.so</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">wsrep_node_name=&#x27;galera1&#x27;</span></span><br><span class="line"><span class="string">wsrep_node_address=&quot;10.0.2.191&quot;</span></span><br><span class="line"><span class="string">wsrep_cluster_name=&#x27;galera-cluster&#x27;</span></span><br><span class="line"><span class="string">wsrep_cluster_address=&quot;gcomm://10.0.2.191,10.0.2.192,10.0.2.193&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">wsrep_provider_options=&quot;gcache.size=300M; gcache.page_size=300M&quot;</span></span><br><span class="line"><span class="string">wsrep_slave_threads=4</span></span><br><span class="line"><span class="string">wsrep_sst_method=rsync</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>在<code>galera2</code>节点执行如下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/my.cnf.d/server.cnf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[mysqld]</span></span><br><span class="line"><span class="string">datadir=/var/lib/mysql</span></span><br><span class="line"><span class="string">socket=/var/lib/mysql/mysql.sock</span></span><br><span class="line"><span class="string">bind-address=0.0.0.0</span></span><br><span class="line"><span class="string">user=mysql</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">default_storage_engine=InnoDB</span></span><br><span class="line"><span class="string">innodb_autoinc_lock_mode=2</span></span><br><span class="line"><span class="string">innodb_flush_log_at_trx_commit=0</span></span><br><span class="line"><span class="string">innodb_buffer_pool_size=128M</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">binlog_format=ROW</span></span><br><span class="line"><span class="string">log-error=/var/log/mysqld.log</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[galera]</span></span><br><span class="line"><span class="string">wsrep_on=ON</span></span><br><span class="line"><span class="string">wsrep_provider=/usr/lib64/galera/libgalera_smm.so</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">wsrep_node_name=&#x27;galera2&#x27;</span></span><br><span class="line"><span class="string">wsrep_node_address=&quot;10.0.2.192&quot;</span></span><br><span class="line"><span class="string">wsrep_cluster_name=&#x27;galera-cluster&#x27;</span></span><br><span class="line"><span class="string">wsrep_cluster_address=&quot;gcomm://10.0.2.191,10.0.2.192,10.0.2.193&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">wsrep_provider_options=&quot;gcache.size=300M; gcache.page_size=300M&quot;</span></span><br><span class="line"><span class="string">wsrep_slave_threads=4</span></span><br><span class="line"><span class="string">wsrep_sst_method=rsync</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>在<code>galera3</code>节点执行如下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/my.cnf.d/server.cnf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[mysqld]</span></span><br><span class="line"><span class="string">datadir=/var/lib/mysql</span></span><br><span class="line"><span class="string">socket=/var/lib/mysql/mysql.sock</span></span><br><span class="line"><span class="string">bind-address=0.0.0.0</span></span><br><span class="line"><span class="string">user=mysql</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">default_storage_engine=InnoDB</span></span><br><span class="line"><span class="string">innodb_autoinc_lock_mode=2</span></span><br><span class="line"><span class="string">innodb_flush_log_at_trx_commit=0</span></span><br><span class="line"><span class="string">innodb_buffer_pool_size=128M</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">binlog_format=ROW</span></span><br><span class="line"><span class="string">log-error=/var/log/mysqld.log</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[galera]</span></span><br><span class="line"><span class="string">wsrep_on=ON</span></span><br><span class="line"><span class="string">wsrep_provider=/usr/lib64/galera/libgalera_smm.so</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">wsrep_node_name=&#x27;galera3&#x27;</span></span><br><span class="line"><span class="string">wsrep_node_address=&quot;10.0.2.193&quot;</span></span><br><span class="line"><span class="string">wsrep_cluster_name=&#x27;galera-cluster&#x27;</span></span><br><span class="line"><span class="string">wsrep_cluster_address=&quot;gcomm://10.0.2.191,10.0.2.192,10.0.2.193&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">wsrep_provider_options=&quot;gcache.size=300M; gcache.page_size=300M&quot;</span></span><br><span class="line"><span class="string">wsrep_slave_threads=4</span></span><br><span class="line"><span class="string">wsrep_sst_method=rsync</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h4 id="启动集群，在集群任意一个节点上执行"><a href="#启动集群，在集群任意一个节点上执行" class="headerlink" title="启动集群，在集群任意一个节点上执行"></a>启动集群，在集群任意一个节点上执行</h4><p>在<code>galera1</code>执行如下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">galera_new_cluster</span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb</span><br></pre></td></tr></table></figure><p>在<code>galera2</code>和<code>galera3</code>执行如下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> --now mariadb</span><br></pre></td></tr></table></figure><h4 id="验证集群部署"><a href="#验证集群部署" class="headerlink" title="验证集群部署"></a>验证集群部署</h4><p>在任意节点执行如下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p -e <span class="string">&quot;SHOW STATUS LIKE &#x27;wsrep_cluster_size&#x27;&quot;</span></span><br></pre></td></tr></table></figure><p>显示如下（默认没有密码直接回车）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mysql -uroot -p -e &quot;SHOW STATUS LIKE &#x27;wsrep_cluster_size&#x27;&quot;</span></span><br><span class="line">Enter password: </span><br><span class="line">+--------------------+-------+</span><br><span class="line">| Variable_name      | Value |</span><br><span class="line">+--------------------+-------+</span><br><span class="line">| wsrep_cluster_size | 3     |</span><br><span class="line">+--------------------+-------+</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br></pre></td></tr></table></figure><h4 id="验证数据同步"><a href="#验证数据同步" class="headerlink" title="验证数据同步"></a>验证数据同步</h4><p>在<code>galera1</code>节点新建数据库<code>galera_test</code>，然后在<code>galera2</code>和<code>galera3</code>节点查询，如果可以查询到<code>galera_test</code>库，说明数据同步成功，集群运行正常</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -e &quot;create database galera_test character set utf8 collate utf8_general_ci;&quot;</span><br></pre></td></tr></table></figure><p>在<code>galera2</code>和<code>galera3</code>分别执行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -e <span class="string">&quot;show databases;&quot;</span></span><br></pre></td></tr></table></figure><h4 id="配置代理"><a href="#配置代理" class="headerlink" title="配置代理"></a>配置代理</h4><p><a href="https://galeracluster.com/library/documentation/ha-proxy.html">https://galeracluster.com/library/documentation/ha-proxy.html</a></p><p>在<code>galera1</code>、<code>galera2</code>、<code>galera3</code>节点分别执行如下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y haproxy keepalived</span><br></pre></td></tr></table></figure><p>修改<code>keepalived</code>配置文件，使用非抢占模式</p><p><code>galera1</code>配置</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/keepalived/keepalived.conf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">! Configuration File for keepalived</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">global_defs &#123;</span></span><br><span class="line"><span class="string">   router_id galera</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">vrrp_script check_haproxy &#123;</span></span><br><span class="line"><span class="string">    script &quot;pidof haproxy&quot;</span></span><br><span class="line"><span class="string">    interval 2</span></span><br><span class="line"><span class="string">    fall 2</span></span><br><span class="line"><span class="string">    rise 2</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">vrrp_instance VI_1 &#123;</span></span><br><span class="line"><span class="string">    state BACKUP</span></span><br><span class="line"><span class="string">    interface ens33</span></span><br><span class="line"><span class="string">    virtual_router_id 51</span></span><br><span class="line"><span class="string">    priority 100</span></span><br><span class="line"><span class="string">    advert_int 1</span></span><br><span class="line"><span class="string">    nopreempt</span></span><br><span class="line"><span class="string">    authentication &#123;</span></span><br><span class="line"><span class="string">        auth_type PASS</span></span><br><span class="line"><span class="string">        auth_pass 1111</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    virtual_ipaddress &#123;</span></span><br><span class="line"><span class="string">        10.0.2.191</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    track_script &#123;</span></span><br><span class="line"><span class="string">        check_haproxy</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p><code>galera2</code>配置</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/keepalived/keepalived.conf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">! Configuration File for keepalived</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">global_defs &#123;</span></span><br><span class="line"><span class="string">   router_id galera</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">vrrp_script check_haproxy &#123;</span></span><br><span class="line"><span class="string">    script &quot;pidof haproxy&quot;</span></span><br><span class="line"><span class="string">    interval 2</span></span><br><span class="line"><span class="string">    fall 2</span></span><br><span class="line"><span class="string">    rise 2</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">vrrp_instance VI_1 &#123;</span></span><br><span class="line"><span class="string">    state BACKUP</span></span><br><span class="line"><span class="string">    interface ens33</span></span><br><span class="line"><span class="string">    virtual_router_id 51</span></span><br><span class="line"><span class="string">    priority 100</span></span><br><span class="line"><span class="string">    advert_int 1</span></span><br><span class="line"><span class="string">    nopreempt</span></span><br><span class="line"><span class="string">    authentication &#123;</span></span><br><span class="line"><span class="string">        auth_type PASS</span></span><br><span class="line"><span class="string">        auth_pass 1111</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    virtual_ipaddress &#123;</span></span><br><span class="line"><span class="string">        10.0.2.192</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    track_script &#123;</span></span><br><span class="line"><span class="string">        check_haproxy</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p><code>galera3</code>配置</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/keepalived/keepalived.conf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">! Configuration File for keepalived</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">global_defs &#123;</span></span><br><span class="line"><span class="string">   router_id galera</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">vrrp_script check_haproxy &#123;</span></span><br><span class="line"><span class="string">    script &quot;pidof haproxy&quot;</span></span><br><span class="line"><span class="string">    interval 2</span></span><br><span class="line"><span class="string">    fall 2</span></span><br><span class="line"><span class="string">    rise 2</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">vrrp_instance VI_1 &#123;</span></span><br><span class="line"><span class="string">    state BACKUP</span></span><br><span class="line"><span class="string">    interface ens33</span></span><br><span class="line"><span class="string">    virtual_router_id 51</span></span><br><span class="line"><span class="string">    priority 100</span></span><br><span class="line"><span class="string">    advert_int 1</span></span><br><span class="line"><span class="string">    nopreempt</span></span><br><span class="line"><span class="string">    authentication &#123;</span></span><br><span class="line"><span class="string">        auth_type PASS</span></span><br><span class="line"><span class="string">        auth_pass 1111</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    virtual_ipaddress &#123;</span></span><br><span class="line"><span class="string">        10.0.2.193</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    track_script &#123;</span></span><br><span class="line"><span class="string">        check_haproxy</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>修改haproxy配置文件，每个节点配置相同</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/haproxy/haproxy.cfg &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">global</span></span><br><span class="line"><span class="string">    log         127.0.0.1 local2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    chroot      /var/lib/haproxy</span></span><br><span class="line"><span class="string">    pidfile     /var/run/haproxy.pid</span></span><br><span class="line"><span class="string">    maxconn     4000</span></span><br><span class="line"><span class="string">    user        haproxy</span></span><br><span class="line"><span class="string">    group       haproxy</span></span><br><span class="line"><span class="string">    daemon</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    stats socket /var/lib/haproxy/stats</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">defaults</span></span><br><span class="line"><span class="string">    mode                    http</span></span><br><span class="line"><span class="string">    log                     global</span></span><br><span class="line"><span class="string">    option                  httplog</span></span><br><span class="line"><span class="string">    option                  dontlognull</span></span><br><span class="line"><span class="string">    option http-server-close</span></span><br><span class="line"><span class="string">    option forwardfor       except 127.0.0.0/8</span></span><br><span class="line"><span class="string">    option                  redispatch</span></span><br><span class="line"><span class="string">    retries                 3</span></span><br><span class="line"><span class="string">    timeout http-request    10s</span></span><br><span class="line"><span class="string">    timeout queue           1m</span></span><br><span class="line"><span class="string">    timeout connect         10s</span></span><br><span class="line"><span class="string">    timeout client          1m</span></span><br><span class="line"><span class="string">    timeout server          1m</span></span><br><span class="line"><span class="string">    timeout http-keep-alive 10s</span></span><br><span class="line"><span class="string">    timeout check           10s</span></span><br><span class="line"><span class="string">    maxconn                 3000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">listen haproxy_stats</span></span><br><span class="line"><span class="string">    bind *:1080</span></span><br><span class="line"><span class="string">    mode http</span></span><br><span class="line"><span class="string">    balance roundrobin</span></span><br><span class="line"><span class="string">    stats uri /haproxy-stats</span></span><br><span class="line"><span class="string">    stats auth admin:admin</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">listen galera </span></span><br><span class="line"><span class="string">     bind *:3307</span></span><br><span class="line"><span class="string">     balance roundrobin</span></span><br><span class="line"><span class="string">     mode tcp</span></span><br><span class="line"><span class="string">     option tcpka</span></span><br><span class="line"><span class="string">     option mysql-check user haproxy</span></span><br><span class="line"><span class="string">     server galera1 10.0.2.191:3306 check weight 1</span></span><br><span class="line"><span class="string">     server galera2 10.0.2.192:3306 check weight 1</span></span><br><span class="line"><span class="string">     server galera3 10.0.2.193:3306 check weight 1</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>任意节点创建haproxy针对数据库检查用户haproxy</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -e &quot;CREATE USER &#x27;haproxy&#x27;@&#x27;%&#x27;&quot;</span><br></pre></td></tr></table></figure><p>3个节点启动启动haproxy和keepalived服务</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> --now haproxy keepalived</span><br></pre></td></tr></table></figure><p>查看vip在哪个节点，可以停止某个节点或vip所在节点haproxy服务，验证vip会发生漂移：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ip a | grep 93</span></span><br><span class="line">.    inet 10.0.2.193/24 brd 10.0.2.255 scope global noprefixroute ens33</span><br><span class="line">    inet 10.0.2.193/32 scope global ens33</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br></pre></td></tr></table></figure><p><del>查看haproxy状态：</del><a href="http://192.168.93.20:8084/haproxy/stats"><del>http://192.168.93.20:8084/haproxy-stats</del></a><del>，用户名密码admin&#x2F;admin。</del></p><p>配置maraidb root用户允许远程连接，任意节点执行即可</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line"><span class="built_in">set</span> password <span class="keyword">for</span> root@localhost = password(<span class="string">&#x27;123456&#x27;</span>);</span><br><span class="line">mysql -e <span class="string">&quot;GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123456&#x27; WITH GRANT OPTION;&quot;</span></span><br></pre></td></tr></table></figure><p>客户端通过vip的3307端口可以成功访问galera集群</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p123456 -h10.0.2.193 -P 3307</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;MariaDB-Galera-Cluster-介绍&quot;&gt;&lt;a href=&quot;#MariaDB-Galera-Cluster-介绍&quot; class=&quot;headerlink&quot; title=&quot;MariaDB Galera Cluster 介绍&quot;&gt;&lt;/a&gt;MariaDB Gal</summary>
      
    
    
    
    <category term="database" scheme="https://xbmlz.github.io/categories/database/"/>
    
    
    <category term="mariadb" scheme="https://xbmlz.github.io/tags/mariadb/"/>
    
  </entry>
  
  <entry>
    <title>MariaDB 表分区</title>
    <link href="https://xbmlz.github.io/mariadb-partition/"/>
    <id>https://xbmlz.github.io/mariadb-partition/</id>
    <published>2022-12-02T11:39:20.000Z</published>
    <updated>2023-09-14T03:44:16.347Z</updated>
    
    <content type="html"><![CDATA[<h2 id="InnoDB逻辑存储结构"><a href="#InnoDB逻辑存储结构" class="headerlink" title="InnoDB逻辑存储结构"></a>InnoDB逻辑存储结构</h2><p>首先要先介绍一下InnoDB逻辑存储结构和区的概念，它的所有数据都被逻辑地存放在表空间，表空间又由段，区，页组成。</p><p><img src="https://cdn.jsdelivr.net/gh/xbmlz/static/img/202212021202813.png"></p><h3 id="segment（段）"><a href="#segment（段）" class="headerlink" title="segment（段）"></a>segment（段）</h3><p>常见的段有数据段、索引段、回滚段等，在<code>InnoDB</code>存储引擎中，对段的管理都是由引擎自身所完成的</p><h4 id="extent（区）"><a href="#extent（区）" class="headerlink" title="extent（区）"></a>extent（区）</h4><p>  区是由连续的页组成的空间，无论页的大小怎么变，区的大小默认总是为1MB。为了保证区中的页的连续性，<code>InnoDB</code>存储引擎一次从磁盘申请4-5个区，<code>InnoDB</code>页的大小默认为16kb，即一个区一共有64（1MB&#x2F;16kb&#x3D;16）个连续的页。每个段开始，先用32页（page）大小的碎片页来存放数据，在使用完这些页之后才是64个连续页的申请。这样做的目的是，对于一些小表或者是undo类的段，可以开始申请较小的空间，节约磁盘开销。</p><h3 id="page（页）"><a href="#page（页）" class="headerlink" title="page（页）"></a>page（页）</h3><p>  上图的page区域，也可以叫块。页是<code>InnoDB</code>磁盘管理的最小单位。默认大小为16KB，可以通过参数<code>innodb_page_size</code>来设置。常见的页类型有：数据页，undo页，系统页，事务数据页，插入缓冲位图页，插入缓冲空闲列表页，未压缩的二进制大对象页，压缩的二进制大对象页等。</p><h2 id="分区概述"><a href="#分区概述" class="headerlink" title="分区概述"></a>分区概述</h2><p>  这里讲的分区，此“区”非彼“区”，这里讲的分区的意思是指将同一表中不同行的记录分配到不同的物理文件中，几个分区就有几个.idb文件，不是我们刚刚说的区。MySQL在5.1时添加了对水平分区的支持。分区是将一个表或索引分解成多个更小，更可管理的部分。每个区都是独立的，可以独立处理，也可以作为一个更大对象的一部分进行处理。这个是MySQL支持的功能，业务代码无需改动。要知道MySQL是面向OLTP的数据，它不像TIDB等其他DB。那么对于分区的使用应该非常小心，如果不清楚如何使用分区可能会对性能产生负面的影响。</p><p>  MySQL数据库的分区是局部分区索引，一个分区中既存了数据，又放了索引。也就是说，每个区的聚集索引和非聚集索引都放在各自区的（不同的物理文件）。目前MySQL数据库还不支持全局分区。</p><p>无论哪种类型的分区，如果表中存在主键或唯一索引时，分区列必须是唯一索引的一个组成部分。</p><h2 id="分区类型"><a href="#分区类型" class="headerlink" title="分区类型"></a>分区类型</h2><p><img src="https://cdn.jsdelivr.net/gh/xbmlz/static/img/202212021206548.png"></p><p><a href="https://mariadb.com/kb/en/partitioning-types-overview/">Partitioning Types Overview - MariaDB Knowledge Base</a></p><h4 id="RANGE分区"><a href="#RANGE分区" class="headerlink" title="RANGE分区"></a>RANGE分区</h4><p><code>RANGE</code>分区类型用于为每个分区分配一个由分区表达式生成的值范围。范围必须有序、连续且不重叠。最小值总是包含在第一个范围内。最高值可能包含在最后一个范围内，也可能不包含在最后一个范围内。</p><p>这种分区方法的变体RANGE COLUMNS允许我们使用多个列和更多的数据类型。</p><p><a href="https://mariadb.com/kb/en/range-partitioning-type/">RANGE Partitioning Type - MariaDB Knowledge Base</a></p><p>创建分区</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `partition_test`.`range_partition` ( </span><br><span class="line">    `id` <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">    `create_time` <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>, </span><br><span class="line">    `num` <span class="type">BIGINT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (`id`, `create_time`)</span><br><span class="line">) </span><br><span class="line"><span class="keyword">PARTITION</span> <span class="keyword">BY</span> <span class="keyword">RANGE</span> (create_time) PARTITIONS <span class="number">3</span> </span><br><span class="line">(</span><br><span class="line">    <span class="keyword">PARTITION</span> part0 <span class="keyword">VALUES</span> LESS THAN (<span class="number">202101</span>),</span><br><span class="line">    <span class="keyword">PARTITION</span> part1 <span class="keyword">VALUES</span> LESS THAN (<span class="number">202102</span>),</span><br><span class="line">    <span class="keyword">PARTITION</span> part2 <span class="keyword">VALUES</span> LESS THAN (<span class="number">202103</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>插入测试数据</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `partition_test`.`range_partition` (`id`, `create_time`, `num`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>, <span class="number">202101</span>, <span class="number">500</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `partition_test`.`range_partition` (`id`, `create_time`, `num`) <span class="keyword">VALUES</span> (<span class="string">&#x27;2&#x27;</span>, <span class="number">202102</span>, <span class="number">800</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `partition_test`.`range_partition` (`id`, `create_time`, `num`) <span class="keyword">VALUES</span> (<span class="string">&#x27;3&#x27;</span>, <span class="number">202103</span>, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><p>通过<code>EXPLAIN PARTITION</code>命令发现SQL优化器只需搜对应的区，不会搜索所有分区</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">EXPLAIN PARTITIONS <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `partition_test`.`range_partition` <span class="keyword">WHERE</span> create_time <span class="operator">=</span> <span class="number">202101</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xbmlz/static/img/202212021208190.png"></p><p>如果sql语句有问题，那么会走所有区。会很危险。所以分区表后，select语句必须走分区键</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">EXPLAIN PARTITIONS <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `partition_test`.`range_partition` <span class="keyword">WHERE</span> num <span class="operator">&gt;</span> <span class="number">500</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xbmlz/static/img/202212021208456.png"></p><p>增加分区</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> range_partition <span class="keyword">add</span> <span class="keyword">partition</span> (<span class="keyword">partition</span> part3 <span class="keyword">values</span> LESS THAN (<span class="number">202104</span>));</span><br></pre></td></tr></table></figure><p>删除分区</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> range_partition <span class="keyword">drop</span> <span class="keyword">partition</span> part3;</span><br></pre></td></tr></table></figure><h4 id="List分区"><a href="#List分区" class="headerlink" title="List分区"></a>List分区</h4><p>类似于按RANGE分区，区别在于LIST分区是基于列值匹配一个离散值集合中的某个值来进行选择</p><p><a href="https://mariadb.com/kb/en/list-partitioning-type/">LIST Partitioning Type - MariaDB Knowledge Base</a></p><p>创建分区</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `partition_test`.`list_partition`</span><br><span class="line">( </span><br><span class="line">  `id` <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT, </span><br><span class="line">  `hos_code` <span class="type">BIGINT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>, </span><br><span class="line">  `name` <span class="type">VARCHAR</span> (<span class="number">32</span>) <span class="keyword">NULL</span>, </span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`, `hos_code`) </span><br><span class="line">) </span><br><span class="line"><span class="keyword">PARTITION</span> <span class="keyword">BY</span> LIST (hos_code) </span><br><span class="line">(</span><br><span class="line">  <span class="keyword">PARTITION</span> part100 <span class="keyword">VALUES</span> <span class="keyword">IN</span> (<span class="number">100</span>),</span><br><span class="line">    <span class="keyword">PARTITION</span> part200 <span class="keyword">VALUES</span> <span class="keyword">IN</span> (<span class="number">200</span>),</span><br><span class="line">    <span class="keyword">PARTITION</span> part300 <span class="keyword">VALUES</span> <span class="keyword">IN</span> (<span class="number">300</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>插入测试数据</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `partition_test`.`list_partition` (`hos_code`, `name`) <span class="keyword">VALUES</span> (<span class="number">100</span>, &quot;张三&quot;);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `partition_test`.`list_partition` (`hos_code`, `name`) <span class="keyword">VALUES</span> (<span class="number">200</span>, &quot;李四&quot;);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `partition_test`.`list_partition` (`hos_code`, `name`) <span class="keyword">VALUES</span> (<span class="number">300</span>, &quot;李四&quot;);</span><br></pre></td></tr></table></figure><p>通过<code>EXPLAIN PARTITION</code>命令发现SQL优化器只需搜对应的区，不会搜索所有分区</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">EXPLAIN PARTITIONS <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `partition_test`.`list_partition` <span class="keyword">WHERE</span> hos_code <span class="operator">=</span> <span class="number">100</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xbmlz/static/img/202212021209483.png"></p><p>增加分区</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> list_partition <span class="keyword">add</span> <span class="keyword">partition</span> (<span class="keyword">partition</span> part400 <span class="keyword">values</span> <span class="keyword">in</span> (<span class="number">400</span>));</span><br></pre></td></tr></table></figure><p>删除分区</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> list_partition <span class="keyword">drop</span> <span class="keyword">partition</span> part400;</span><br></pre></td></tr></table></figure><h4 id="HASH分区"><a href="#HASH分区" class="headerlink" title="HASH分区"></a>HASH分区</h4><p><code>HASH</code>分区是一种分区形式，其中服务器负责放置数据的分区，以确保分区之间的均匀分布。</p><p>它需要一个列值，或者一个基于列值的表达式，该列值是散列的，还需要将表划分到的分区数。</p><p><code>number_of_partitions </code>表达式需要返回一个非常量的确定整数。每次插入和更新都会对其求值，因此过于复杂的表达式可能会导致性能问题</p><p>是一个正整数，指定要将表划分到的分区数。如果省略PARTITIONS子句，则默认分区数为1。</p><p>创建分区</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `partition_test`.`hash_partition`</span><br><span class="line">( </span><br><span class="line">    `name` <span class="type">VARCHAR</span> (<span class="number">32</span>) <span class="keyword">NULL</span>, </span><br><span class="line">  `birthdate` <span class="type">date</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">) </span><br><span class="line"><span class="keyword">PARTITION</span> <span class="keyword">BY</span> HASH (<span class="keyword">YEAR</span>(birthdate)) </span><br><span class="line">PARTITIONS <span class="number">4</span>;</span><br></pre></td></tr></table></figure><p>插入测试数据</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `partition_test`.`hash_partition` (`name`, `birthdate`) <span class="keyword">VALUES</span> (&quot;张三&quot;, <span class="string">&#x27;2001-01-01&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `partition_test`.`hash_partition` (`name`, `birthdate`) <span class="keyword">VALUES</span> (&quot;李四&quot;, <span class="string">&#x27;2002-02-02&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `partition_test`.`hash_partition` (`name`, `birthdate`) <span class="keyword">VALUES</span> (&quot;王五&quot;, <span class="string">&#x27;2003-03-03&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `partition_test`.`hash_partition` (`name`, `birthdate`) <span class="keyword">VALUES</span> (&quot;赵六&quot;, <span class="string">&#x27;2004-04-04&#x27;</span>);</span><br></pre></td></tr></table></figure><p>通过<code>EXPLAIN PARTITION</code>命令发现SQL优化器只需搜对应的区，不会搜索所有分区</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">EXPLAIN PARTITIONS <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `partition_test`.`hash_partition` <span class="keyword">WHERE</span> birthdate <span class="operator">=</span> <span class="string">&#x27;2001-01-01&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xbmlz/static/img/202212021209124.png"></p><p>增加分区</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> hash_partition <span class="keyword">add</span> <span class="keyword">partition</span> (<span class="keyword">partition</span> p4);</span><br></pre></td></tr></table></figure><p>删除分区(只能在RANGE或者LIST分区时被删除)</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">PARTITION</span> can <span class="keyword">only</span> be used <span class="keyword">on</span> <span class="keyword">RANGE</span><span class="operator">/</span>LIST partitions</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;InnoDB逻辑存储结构&quot;&gt;&lt;a href=&quot;#InnoDB逻辑存储结构&quot; class=&quot;headerlink&quot; title=&quot;InnoDB逻辑存储结构&quot;&gt;&lt;/a&gt;InnoDB逻辑存储结构&lt;/h2&gt;&lt;p&gt;首先要先介绍一下InnoDB逻辑存储结构和区的概念，它的所有</summary>
      
    
    
    
    <category term="database" scheme="https://xbmlz.github.io/categories/database/"/>
    
    
    <category term="mariadb" scheme="https://xbmlz.github.io/tags/mariadb/"/>
    
    <category term="partition" scheme="https://xbmlz.github.io/tags/partition/"/>
    
  </entry>
  
  <entry>
    <title>CentOS MariaDB 一键安装脚本</title>
    <link href="https://xbmlz.github.io/centos-mariadb-install/"/>
    <id>https://xbmlz.github.io/centos-mariadb-install/</id>
    <published>2022-11-27T00:25:53.000Z</published>
    <updated>2023-09-14T03:44:16.347Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">MARIADB_DIR=/usr/local/mariadb</span><br><span class="line">DATA_DIR=/data/mariadb</span><br><span class="line">MARIADB_VER=10.3.37</span><br><span class="line">ROOT_PASSWORD=123456</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">yum install -y wget</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$&#123;MARIADB_DIR&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建mysql的用户做为mariadb的运行用户</span></span><br><span class="line">useradd -r mysql -s /sbin/nologin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载mariadb</span></span><br><span class="line"><span class="built_in">cd</span> /usr/local/src</span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/mariadb/mariadb-<span class="variable">$&#123;MARIADB_VER&#125;</span>/bintar-linux-systemd-x86_64/mariadb-<span class="variable">$&#123;MARIADB_VER&#125;</span>-linux-systemd-x86_64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxvf mariadb-<span class="variable">$&#123;MARIADB_VER&#125;</span>-linux-systemd-x86_64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移动到指定目录</span></span><br><span class="line"><span class="built_in">mv</span> mariadb-<span class="variable">$&#123;MARIADB_VER&#125;</span>-linux-systemd-x86_64 <span class="variable">$&#123;MARIADB_DIR&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建软连接</span></span><br><span class="line"><span class="built_in">ln</span> -s <span class="variable">$&#123;MARIADB_DIR&#125;</span> /usr/local/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权目录</span></span><br><span class="line"><span class="built_in">chown</span> -R mysql.mysql /usr/local/mysql/</span><br><span class="line"><span class="built_in">chown</span> -R mysql.mysql <span class="variable">$&#123;DATA_DIR&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建配置文件</span></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/my.cnf &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[client]</span></span><br><span class="line"><span class="string">port = 3306</span></span><br><span class="line"><span class="string">socket = /tmp/mysql.sock</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysqld]</span></span><br><span class="line"><span class="string">port = 3306</span></span><br><span class="line"><span class="string">socket = /tmp/mysql.sock</span></span><br><span class="line"><span class="string">datadir = $&#123;DATA_DIR&#125;</span></span><br><span class="line"><span class="string">binlog_cache_size = 256K</span></span><br><span class="line"><span class="string">thread_stack = 512K</span></span><br><span class="line"><span class="string">join_buffer_size = 8192K</span></span><br><span class="line"><span class="string">query_cache_type = 1</span></span><br><span class="line"><span class="string">max_heap_table_size = 2048M</span></span><br><span class="line"><span class="string">default_storage_engine = InnoDB</span></span><br><span class="line"><span class="string">performance_schema_max_table_instances = 400</span></span><br><span class="line"><span class="string">table_definition_cache = 400</span></span><br><span class="line"><span class="string">skip-external-locking</span></span><br><span class="line"><span class="string">key_buffer_size = 1024M</span></span><br><span class="line"><span class="string">max_allowed_packet = 100G</span></span><br><span class="line"><span class="string">table_open_cache = 2048</span></span><br><span class="line"><span class="string">sort_buffer_size = 4096K</span></span><br><span class="line"><span class="string">net_buffer_length = 4K</span></span><br><span class="line"><span class="string">read_buffer_size = 4096K</span></span><br><span class="line"><span class="string">read_rnd_buffer_size = 2048K</span></span><br><span class="line"><span class="string">myisam_sort_buffer_size = 16M</span></span><br><span class="line"><span class="string">thread_cache_size = 256</span></span><br><span class="line"><span class="string">query_cache_size = 384M</span></span><br><span class="line"><span class="string">tmp_table_size = 2048M</span></span><br><span class="line"><span class="string">sql-mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">explicit_defaults_for_timestamp = true</span></span><br><span class="line"><span class="string">#skip-name-resolve</span></span><br><span class="line"><span class="string">max_connections = 500</span></span><br><span class="line"><span class="string">max_connect_errors = 100</span></span><br><span class="line"><span class="string">open_files_limit = 65535</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">log-bin=mysql-bin</span></span><br><span class="line"><span class="string">binlog_format=mixed</span></span><br><span class="line"><span class="string">server-id = 1</span></span><br><span class="line"><span class="string">expire_logs_days = 10</span></span><br><span class="line"><span class="string">slow_query_log=1</span></span><br><span class="line"><span class="string">slow-query-log-file=$&#123;DATA_DIR&#125;/mysql-slow.log</span></span><br><span class="line"><span class="string">long_query_time=3</span></span><br><span class="line"><span class="string">log_bin_trust_function_creators = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">innodb_data_home_dir = $&#123;DATA_DIR&#125;</span></span><br><span class="line"><span class="string">innodb_data_file_path = ibdata1:10M:autoextend</span></span><br><span class="line"><span class="string">innodb_log_group_home_dir = $&#123;DATA_DIR&#125;</span></span><br><span class="line"><span class="string">innodb_buffer_pool_size = 4096M</span></span><br><span class="line"><span class="string">innodb_log_file_size = 128M</span></span><br><span class="line"><span class="string">innodb_log_buffer_size = 32M</span></span><br><span class="line"><span class="string">innodb_flush_log_at_trx_commit = 1</span></span><br><span class="line"><span class="string">innodb_lock_wait_timeout = 50</span></span><br><span class="line"><span class="string">innodb_max_dirty_pages_pct = 90</span></span><br><span class="line"><span class="string">innodb_read_io_threads = 2</span></span><br><span class="line"><span class="string">innodb_write_io_threads = 2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysqldump]</span></span><br><span class="line"><span class="string">quick</span></span><br><span class="line"><span class="string">max_allowed_packet = 500M</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysql]</span></span><br><span class="line"><span class="string">no-auto-rehash</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[myisamchk]</span></span><br><span class="line"><span class="string">key_buffer_size = 64M</span></span><br><span class="line"><span class="string">sort_buffer_size = 1M</span></span><br><span class="line"><span class="string">read_buffer = 2M</span></span><br><span class="line"><span class="string">write_buffer = 2M</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysqlhotcopy]</span></span><br><span class="line"><span class="string">interactive-timeout</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化数据库</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;MARIADB_DIR&#125;</span></span><br><span class="line">./scripts/mysql_install_db --user=mysql --datadir=<span class="variable">$&#123;DATA_DIR&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机启动</span></span><br><span class="line"><span class="built_in">cp</span> support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line"><span class="built_in">chmod</span> +x /etc/init.d/mysqld</span><br><span class="line">chkconfig --add mysqld</span><br><span class="line">chkconfig mysqld on</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">service mysqld start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置密码</span></span><br><span class="line"><span class="variable">$&#123;MARIADB_DIR&#125;</span>/bin/mysqladmin -u root password <span class="variable">$&#123;ROOT_PASSWORD&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置环境变量</span></span><br><span class="line"><span class="built_in">cat</span> &gt;&gt; /etc/profile &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">export PATH=\$PATH:/usr/local/mysql/bin</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使环境变量生效</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span cla</summary>
      
    
    
    
    <category term="开发" scheme="https://xbmlz.github.io/categories/%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="开发" scheme="https://xbmlz.github.io/tags/%E5%BC%80%E5%8F%91/"/>
    
    <category term="数据库" scheme="https://xbmlz.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>南京市民李先生</title>
    <link href="https://xbmlz.github.io/li-zhi/"/>
    <id>https://xbmlz.github.io/li-zhi/</id>
    <published>2022-08-22T10:20:48.000Z</published>
    <updated>2023-09-14T03:44:16.347Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><div id="aplayer"></div><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js"></script><script src="https://cdn.jsdelivr.net/gh/nj-lizhi/song@main/audio/list-v2.js"></script><script>// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678const ap = new APlayer({    container: document.getElementById('aplayer'),    autoplay: false,    listFolded: false,    audio: list});</script>]]></content>
    
    
    <summary type="html">南京市民李先生私藏</summary>
    
    
    
    <category term="music" scheme="https://xbmlz.github.io/categories/music/"/>
    
    <category term="李志" scheme="https://xbmlz.github.io/categories/music/%E6%9D%8E%E5%BF%97/"/>
    
    
    <category term="music" scheme="https://xbmlz.github.io/tags/music/"/>
    
  </entry>
  
  <entry>
    <title>Echarts Test</title>
    <link href="https://xbmlz.github.io/echarts-test/"/>
    <id>https://xbmlz.github.io/echarts-test/</id>
    <published>2022-07-25T14:00:50.000Z</published>
    <updated>2023-09-14T03:44:16.347Z</updated>
    
    <content type="html"><![CDATA[<h2 id="折线图"><a href="#折线图" class="headerlink" title="折线图"></a>折线图</h2>  <div id="echarts-3279" style="width: 85%; height: 400px; margin: 0 auto"></div>  <script src="https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js"></script>  <script>    var myChart = echarts.init(document.getElementById('echarts-3279'));    var option = {  xAxis: {    type: 'category',    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']  },  yAxis: {    type: 'value'  },  series: [    {      data: [150, 230, 224, 218, 135, 147, 260],      type: 'line'    }  ]};    myChart.setOption(option);  </script>  <h2 id="柱状图"><a href="#柱状图" class="headerlink" title="柱状图"></a>柱状图</h2>  <div id="echarts-6507" style="width: 85%; height: 400px; margin: 0 auto"></div>  <script src="https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js"></script>  <script>    var myChart = echarts.init(document.getElementById('echarts-6507'));    var option = {  xAxis: {    type: 'category',    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']  },  yAxis: {    type: 'value'  },  series: [    {      data: [120, 200, 150, 80, 70, 110, 130],      type: 'bar',      showBackground: true,      backgroundStyle: {        color: 'rgba(180, 180, 180, 0.2)'      }    }  ]};    myChart.setOption(option);  </script>  <h2 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h2>  <div id="echarts-6478" style="width: 85%; height: 400px; margin: 0 auto"></div>  <script src="https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js"></script>  <script>    var myChart = echarts.init(document.getElementById('echarts-6478'));    var option = {  title: {    text: 'Referer of a Website',    subtext: 'Fake Data',    left: 'center'  },  tooltip: {    trigger: 'item'  },  legend: {    orient: 'vertical',    left: 'left'  },  series: [    {      name: 'Access From',      type: 'pie',      radius: '50%',      data: [        { value: 1048, name: 'Search Engine' },        { value: 735, name: 'Direct' },        { value: 580, name: 'Email' },        { value: 484, name: 'Union Ads' },        { value: 300, name: 'Video Ads' }      ],      emphasis: {        itemStyle: {          shadowBlur: 10,          shadowOffsetX: 0,          shadowColor: 'rgba(0, 0, 0, 0.5)'        }      }    }  ]};    myChart.setOption(option);  </script>  <h2 id="散点图"><a href="#散点图" class="headerlink" title="散点图"></a>散点图</h2>  <div id="echarts-3769" style="width: 85%; height: 400px; margin: 0 auto"></div>  <script src="https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js"></script>  <script>    var myChart = echarts.init(document.getElementById('echarts-3769'));    var option = {  xAxis: {},  yAxis: {},  series: [    {      symbolSize: 20,      data: [        [10.0, 8.04],        [8.07, 6.95],        [13.0, 7.58],        [9.05, 8.81],        [11.0, 8.33],        [14.0, 7.66],        [13.4, 6.81],        [10.0, 6.33],        [14.0, 8.96],        [12.5, 6.82],        [9.15, 7.2],        [11.5, 7.2],        [3.03, 4.23],        [12.2, 7.83],        [2.02, 4.47],        [1.05, 3.33],        [4.05, 4.96],        [6.03, 7.24],        [12.0, 6.26],        [12.0, 8.84],        [7.08, 5.82],        [5.02, 5.68]      ],      type: 'scatter'    }  ]};    myChart.setOption(option);  </script>  <h2 id="雷达图"><a href="#雷达图" class="headerlink" title="雷达图"></a>雷达图</h2>  <div id="echarts-160" style="width: 85%; height: 400px; margin: 0 auto"></div>  <script src="https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js"></script>  <script>    var myChart = echarts.init(document.getElementById('echarts-160'));    var option = {  title: {    text: 'Basic Radar Chart'  },  legend: {    data: ['Allocated Budget', 'Actual Spending']  },  radar: {    // shape: 'circle',    indicator: [      { name: 'Sales', max: 6500 },      { name: 'Administration', max: 16000 },      { name: 'Information Technology', max: 30000 },      { name: 'Customer Support', max: 38000 },      { name: 'Development', max: 52000 },      { name: 'Marketing', max: 25000 }    ]  },  series: [    {      name: 'Budget vs spending',      type: 'radar',      data: [        {          value: [4200, 3000, 20000, 35000, 50000, 18000],          name: 'Allocated Budget'        },        {          value: [5000, 14000, 28000, 26000, 42000, 21000],          name: 'Actual Spending'        }      ]    }  ]};    myChart.setOption(option);  </script>  <h2 id="盒须图"><a href="#盒须图" class="headerlink" title="盒须图"></a>盒须图</h2>  <div id="echarts-5691" style="width: 85%; height: 400px; margin: 0 auto"></div>  <script src="https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js"></script>  <script>    var myChart = echarts.init(document.getElementById('echarts-5691'));    var option = {  title: [    {      text: 'Michelson-Morley Experiment',      left: 'center'    },    {      text: 'upper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR',      borderColor: '#999',      borderWidth: 1,      textStyle: {        fontWeight: 'normal',        fontSize: 14,        lineHeight: 20      },      left: '10%',      top: '90%'    }  ],  dataset: [    {      // prettier-ignore      source: [                [850, 740, 900, 1070, 930, 850, 950, 980, 980, 880, 1000, 980, 930, 650, 760, 810, 1000, 1000, 960, 960],                [960, 940, 960, 940, 880, 800, 850, 880, 900, 840, 830, 790, 810, 880, 880, 830, 800, 790, 760, 800],                [880, 880, 880, 860, 720, 720, 620, 860, 970, 950, 880, 910, 850, 870, 840, 840, 850, 840, 840, 840],                [890, 810, 810, 820, 800, 770, 760, 740, 750, 760, 910, 920, 890, 860, 880, 720, 840, 850, 850, 780],                [890, 840, 780, 810, 760, 810, 790, 810, 820, 850, 870, 870, 810, 740, 810, 940, 950, 800, 810, 870]            ]    },    {      transform: {        type: 'boxplot',        config: { itemNameFormatter: 'expr {value}' }      }    },    {      fromDatasetIndex: 1,      fromTransformResult: 1    }  ],  tooltip: {    trigger: 'item',    axisPointer: {      type: 'shadow'    }  },  grid: {    left: '10%',    right: '10%',    bottom: '15%'  },  xAxis: {    type: 'category',    boundaryGap: true,    nameGap: 30,    splitArea: {      show: false    },    splitLine: {      show: false    }  },  yAxis: {    type: 'value',    name: 'km/s minus 299,000',    splitArea: {      show: true    }  },  series: [    {      name: 'boxplot',      type: 'boxplot',      datasetIndex: 1    },    {      name: 'outlier',      type: 'scatter',      datasetIndex: 2    }  ]};    myChart.setOption(option);  </script>  ]]></content>
    
    
    <summary type="html">测试Echarts是否成功渲染</summary>
    
    
    
    <category term="plugin" scheme="https://xbmlz.github.io/categories/plugin/"/>
    
    
    <category term="plugin" scheme="https://xbmlz.github.io/tags/plugin/"/>
    
  </entry>
  
  <entry>
    <title>Mariaid Test</title>
    <link href="https://xbmlz.github.io/mariaid-test/"/>
    <id>https://xbmlz.github.io/mariaid-test/</id>
    <published>2022-07-22T13:44:48.000Z</published>
    <updated>2023-09-14T03:44:16.347Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Flowchart"><a href="#Flowchart" class="headerlink" title="Flowchart"></a>Flowchart</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TD</span><br><span class="line">A[Hard] --&gt;|Text| B(Round)</span><br><span class="line">B --&gt; C&#123;Decision&#125;</span><br><span class="line">C --&gt;|One| D[Result 1]</span><br><span class="line">C --&gt;|Two| E[Result 2]</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre class="mermaid">graph TDA[Hard] -->|Text| B(Round)B --> C{Decision}C -->|One| D[Result 1]C -->|Two| E[Result 2]</pre><h2 id="Sequence-diagrams"><a href="#Sequence-diagrams" class="headerlink" title="Sequence diagrams"></a>Sequence diagrams</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">Alice-&gt;&gt;John: Hello John, how are you?</span><br><span class="line">loop Healthcheck</span><br><span class="line">    John-&gt;&gt;John: Fight against hypochondria</span><br><span class="line">end</span><br><span class="line">Note right of John: Rational thoughts!</span><br><span class="line">John--&gt;&gt;Alice: Great!</span><br><span class="line">John-&gt;&gt;Bob: How about you?</span><br><span class="line">Bob--&gt;&gt;John: Jolly good!</span><br></pre></td></tr></table></figure><pre class="mermaid">sequenceDiagramAlice->>John: Hello John, how are you?loop Healthcheck    John->>John: Fight against hypochondriaendNote right of John: Rational thoughts!John-->>Alice: Great!John->>Bob: How about you?Bob-->>John: Jolly good!</pre><h2 id="Class-diagrams"><a href="#Class-diagrams" class="headerlink" title="Class diagrams"></a>Class diagrams</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">classDiagram</span><br><span class="line">    Animal &lt;|-- Duck</span><br><span class="line">    Animal &lt;|-- Fish</span><br><span class="line">    Animal &lt;|-- Zebra</span><br><span class="line">    Animal : +int age</span><br><span class="line">    Animal : +String gender</span><br><span class="line">    Animal: +isMammal()</span><br><span class="line">    Animal: +mate()</span><br><span class="line">    class Duck&#123;</span><br><span class="line">        +String beakColor</span><br><span class="line">        +swim()</span><br><span class="line">        +quack()</span><br><span class="line">    &#125;</span><br><span class="line">    class Fish&#123;</span><br><span class="line">        -int sizeInFeet</span><br><span class="line">        -canEat()</span><br><span class="line">    &#125;</span><br><span class="line">    class Zebra&#123;</span><br><span class="line">        +bool is_wild</span><br><span class="line">        +run()</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><pre class="mermaid">classDiagram    Animal <|-- Duck    Animal <|-- Fish    Animal <|-- Zebra    Animal : +int age    Animal : +String gender    Animal: +isMammal()    Animal: +mate()    class Duck{        +String beakColor        +swim()        +quack()    }    class Fish{        -int sizeInFeet        -canEat()    }    class Zebra{        +bool is_wild        +run()    }</pre><h2 id="State-diagrams"><a href="#State-diagrams" class="headerlink" title="State diagrams"></a>State diagrams</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">stateDiagram-v2</span><br><span class="line">[*] --&gt; Still</span><br><span class="line">Still --&gt; [*]</span><br><span class="line">Still --&gt; Moving</span><br><span class="line">Moving --&gt; Still</span><br><span class="line">Moving --&gt; Crash</span><br><span class="line">Crash --&gt; [*]</span><br></pre></td></tr></table></figure><pre class="mermaid">stateDiagram-v2[*] --> StillStill --> [*]Still --> MovingMoving --> StillMoving --> CrashCrash --> [*]</pre><h2 id="Entity-Relationship-Diagrams"><a href="#Entity-Relationship-Diagrams" class="headerlink" title="Entity Relationship Diagrams"></a>Entity Relationship Diagrams</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">erDiagram</span><br><span class="line">    CUSTOMER ||--o&#123; ORDER : places</span><br><span class="line">    ORDER ||--|&#123; LINE-ITEM : contains</span><br><span class="line">    CUSTOMER &#125;|..|&#123; DELIVERY-ADDRESS : uses</span><br></pre></td></tr></table></figure><pre class="mermaid">erDiagram    CUSTOMER ||--o{ ORDER : places    ORDER ||--|{ LINE-ITEM : contains    CUSTOMER }|..|{ DELIVERY-ADDRESS : uses</pre><h2 id="User-Journey-Diagram"><a href="#User-Journey-Diagram" class="headerlink" title="User Journey Diagram"></a>User Journey Diagram</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">journey</span><br><span class="line">    title My working day</span><br><span class="line">    section Go to work</span><br><span class="line">      Make tea: 5: Me</span><br><span class="line">      Go upstairs: 3: Me</span><br><span class="line">      Do work: 1: Me, Cat</span><br><span class="line">    section Go home</span><br><span class="line">      Go downstairs: 5: Me</span><br><span class="line">      Sit down: 5: Me</span><br></pre></td></tr></table></figure><pre class="mermaid">journey    title My working day    section Go to work      Make tea: 5: Me      Go upstairs: 3: Me      Do work: 1: Me, Cat    section Go home      Go downstairs: 5: Me      Sit down: 5: Me</pre><h2 id="Gantt-diagrams"><a href="#Gantt-diagrams" class="headerlink" title="Gantt diagrams"></a>Gantt diagrams</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gantt</span><br><span class="line">    title A Gantt Diagram</span><br><span class="line">    dateFormat  YYYY-MM-DD</span><br><span class="line">    section Section</span><br><span class="line">    A task           :a1, 2014-01-01, 30d</span><br><span class="line">    Another task     :after a1  , 20d</span><br><span class="line">    section Another</span><br><span class="line">    Task in sec      :2014-01-12  , 12d</span><br><span class="line">    another task      : 24d</span><br></pre></td></tr></table></figure><pre class="mermaid">gantt    title A Gantt Diagram    dateFormat  YYYY-MM-DD    section Section    A task           :a1, 2014-01-01, 30d    Another task     :after a1  , 20d    section Another    Task in sec      :2014-01-12  , 12d    another task      : 24d</pre><h2 id="Pie-chart-diagrams"><a href="#Pie-chart-diagrams" class="headerlink" title="Pie chart diagrams"></a>Pie chart diagrams</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pie title Pets adopted by volunteers</span><br><span class="line">    &quot;Dogs&quot; : 386</span><br><span class="line">    &quot;Cats&quot; : 85</span><br><span class="line">    &quot;Rats&quot; : 15</span><br></pre></td></tr></table></figure><pre class="mermaid">pie title Pets adopted by volunteers    "Dogs" : 386    "Cats" : 85    "Rats" : 15</pre><h2 id="Requirement-Diagram"><a href="#Requirement-Diagram" class="headerlink" title="Requirement Diagram"></a>Requirement Diagram</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">requirementDiagram</span><br><span class="line"></span><br><span class="line">requirement test_req &#123;</span><br><span class="line">id: 1</span><br><span class="line">text: the test text.</span><br><span class="line">risk: high</span><br><span class="line">verifymethod: test</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">element test_entity &#123;</span><br><span class="line">type: simulation</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test_entity - satisfies -&gt; test_req</span><br></pre></td></tr></table></figure><pre class="mermaid">requirementDiagramrequirement test_req {id: 1text: the test text.risk: highverifymethod: test}element test_entity {type: simulation}test_entity - satisfies -> test_req</pre><h2 id="Gitgraph-Diagrams"><a href="#Gitgraph-Diagrams" class="headerlink" title="Gitgraph Diagrams"></a>Gitgraph Diagrams</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gitGraph</span><br><span class="line">    commit</span><br><span class="line">    commit</span><br><span class="line">    branch develop</span><br><span class="line">    checkout develop</span><br><span class="line">    commit</span><br><span class="line">    commit</span><br><span class="line">    checkout main</span><br><span class="line">    merge develop</span><br><span class="line">    commit</span><br><span class="line">    commit</span><br></pre></td></tr></table></figure><pre class="mermaid">gitGraph    commit    commit    branch develop    checkout develop    commit    commit    checkout main    merge develop    commit    commit</pre><h2 id="C4-Diagrams"><a href="#C4-Diagrams" class="headerlink" title="C4 Diagrams"></a>C4 Diagrams</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C4Context</span><br><span class="line">      title System Context diagram for Internet Banking System</span><br><span class="line">      Enterprise_Boundary(b0, &quot;BankBoundary0&quot;) &#123;</span><br><span class="line">        Person(customerA, &quot;Banking Customer A&quot;, &quot;A customer of the bank, with personal bank accounts.&quot;)</span><br><span class="line">        Person(customerB, &quot;Banking Customer B&quot;)      </span><br><span class="line">        Person_Ext(customerC, &quot;Banking Customer C&quot;, &quot;desc&quot;)            </span><br><span class="line"></span><br><span class="line">        Person(customerD, &quot;Banking Customer D&quot;, &quot;A customer of the bank, &lt;br/&gt; with personal bank accounts.&quot;)</span><br><span class="line"></span><br><span class="line">        System(SystemAA, &quot;Internet Banking System&quot;, &quot;Allows customers to view information about their bank accounts, and make payments.&quot;)  </span><br><span class="line"></span><br><span class="line">        Enterprise_Boundary(b1, &quot;BankBoundary&quot;) &#123;</span><br><span class="line">         </span><br><span class="line">          SystemDb_Ext(SystemE, &quot;Mainframe Banking System&quot;, &quot;Stores all of the core banking information about customers, accounts, transactions, etc.&quot;)      </span><br><span class="line"></span><br><span class="line">          System_Boundary(b2, &quot;BankBoundary2&quot;) &#123;  </span><br><span class="line">            System(SystemA, &quot;Banking System A&quot;)  </span><br><span class="line">            System(SystemB, &quot;Banking System B&quot;, &quot;A system of the bank, with personal bank accounts. next line.&quot;)        </span><br><span class="line">          &#125; </span><br><span class="line"></span><br><span class="line">          System_Ext(SystemC, &quot;E-mail system&quot;, &quot;The internal Microsoft Exchange e-mail system.&quot;) </span><br><span class="line">          SystemDb(SystemD, &quot;Banking System D Database&quot;, &quot;A system of the bank, with personal bank accounts.&quot;) </span><br><span class="line"></span><br><span class="line">          Boundary(b3, &quot;BankBoundary3&quot;, &quot;boundary&quot;) &#123;  </span><br><span class="line">            SystemQueue(SystemF, &quot;Banking System F Queue&quot;, &quot;A system of the bank.&quot;)        </span><br><span class="line">            SystemQueue_Ext(SystemG, &quot;Banking System G Queue&quot;, &quot;A system of the bank, with personal bank accounts.&quot;) </span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      BiRel(customerA, SystemAA, &quot;Uses&quot;)</span><br><span class="line">      BiRel(SystemAA, SystemE, &quot;Uses&quot;)</span><br><span class="line">      Rel(SystemAA, SystemC, &quot;Sends e-mails&quot;, &quot;SMTP&quot;)</span><br><span class="line">      Rel(SystemC, customerA, &quot;Sends e-mails to&quot;)</span><br><span class="line"></span><br><span class="line">      UpdateElementStyle(customerA, $fontColor=&quot;red&quot;, $bgColor=&quot;grey&quot;, $borderColor=&quot;red&quot;)</span><br><span class="line">      UpdateRelStyle(customerA, SystemAA, $textColor=&quot;blue&quot;, $lineColor=&quot;blue&quot;, $offsetX=&quot;5&quot;)</span><br><span class="line">      UpdateRelStyle(SystemAA, SystemE, $textColor=&quot;blue&quot;, $lineColor=&quot;blue&quot;, $offsetY=&quot;-10&quot;)</span><br><span class="line">      UpdateRelStyle(SystemAA, SystemC, $textColor=&quot;blue&quot;, $lineColor=&quot;blue&quot;, $offsetY=&quot;-40&quot;, $offsetX=&quot;-50&quot;)</span><br><span class="line">      UpdateRelStyle(SystemC, customerA, $textColor=&quot;red&quot;, $lineColor=&quot;red&quot;, $offsetX=&quot;-50&quot;, $offsetY=&quot;20&quot;)</span><br><span class="line">      </span><br><span class="line">      UpdateLayoutConfig($c4ShapeInRow=&quot;3&quot;, $c4BoundaryInRow=&quot;1&quot;)</span><br></pre></td></tr></table></figure><pre class="mermaid">C4Context      title System Context diagram for Internet Banking System      Enterprise_Boundary(b0, "BankBoundary0") {        Person(customerA, "Banking Customer A", "A customer of the bank, with personal bank accounts.")        Person(customerB, "Banking Customer B")              Person_Ext(customerC, "Banking Customer C", "desc")                    Person(customerD, "Banking Customer D", "A customer of the bank, <br/> with personal bank accounts.")        System(SystemAA, "Internet Banking System", "Allows customers to view information about their bank accounts, and make payments.")          Enterprise_Boundary(b1, "BankBoundary") {                   SystemDb_Ext(SystemE, "Mainframe Banking System", "Stores all of the core banking information about customers, accounts, transactions, etc.")                System_Boundary(b2, "BankBoundary2") {              System(SystemA, "Banking System A")              System(SystemB, "Banking System B", "A system of the bank, with personal bank accounts. next line.")                  }           System_Ext(SystemC, "E-mail system", "The internal Microsoft Exchange e-mail system.")           SystemDb(SystemD, "Banking System D Database", "A system of the bank, with personal bank accounts.")           Boundary(b3, "BankBoundary3", "boundary") {              SystemQueue(SystemF, "Banking System F Queue", "A system of the bank.")                    SystemQueue_Ext(SystemG, "Banking System G Queue", "A system of the bank, with personal bank accounts.")           }        }      }            BiRel(customerA, SystemAA, "Uses")      BiRel(SystemAA, SystemE, "Uses")      Rel(SystemAA, SystemC, "Sends e-mails", "SMTP")      Rel(SystemC, customerA, "Sends e-mails to")      UpdateElementStyle(customerA, $fontColor="red", $bgColor="grey", $borderColor="red")      UpdateRelStyle(customerA, SystemAA, $textColor="blue", $lineColor="blue", $offsetX="5")      UpdateRelStyle(SystemAA, SystemE, $textColor="blue", $lineColor="blue", $offsetY="-10")      UpdateRelStyle(SystemAA, SystemC, $textColor="blue", $lineColor="blue", $offsetY="-40", $offsetX="-50")      UpdateRelStyle(SystemC, customerA, $textColor="red", $lineColor="red", $offsetX="-50", $offsetY="20")            UpdateLayoutConfig($c4ShapeInRow="3", $c4BoundaryInRow="1")</pre>]]></content>
    
    
    <summary type="html">测试Mariaid是否成功渲染</summary>
    
    
    
    <category term="markdown" scheme="https://xbmlz.github.io/categories/markdown/"/>
    
    
    <category term="markdown" scheme="https://xbmlz.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>MathJax Test</title>
    <link href="https://xbmlz.github.io/math-jax-test/"/>
    <id>https://xbmlz.github.io/math-jax-test/</id>
    <published>2022-07-21T08:53:56.000Z</published>
    <updated>2023-09-14T03:44:16.347Z</updated>
    
    <content type="html"><![CDATA[<h2 id="行内公式与块公式"><a href="#行内公式与块公式" class="headerlink" title="行内公式与块公式"></a>行内公式与块公式</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$f(x)=ax+b$ 这是行内公式.</span><br><span class="line">$$f(x)=ax+b$$ 这是块公式，单独占一行.</span><br></pre></td></tr></table></figure><p>$f(x)&#x3D;ax+b$ 这是行内公式.<br>$$f(x)&#x3D;ax+b$$ 这是块公式，单独占一行.</p><h2 id="上标与下标"><a href="#上标与下标" class="headerlink" title="上标与下标"></a>上标与下标</h2><p>使用 ^ 表示上标，使用 _ 表示下标，如果上下标的内容多于一个字符，可以使用大括号括起来：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$f(x) = a<span class="emphasis">_1x^n + a_</span>2x^&#123;n-1&#125; + a<span class="emphasis">_3x^&#123;n-2&#125;$$</span></span><br></pre></td></tr></table></figure><p>显示效果：</p><p>$$f(x) &#x3D; a_1x^n + a_2x^{n-1} + a_3x^{n-2}$$</p><p>如果左右两边都有上下标可以使用 \sideset 语法：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$\sideset&#123;^n<span class="emphasis">_k&#125;&#123;^x_</span>y&#125;a$$</span><br></pre></td></tr></table></figure><p>显示效果：</p><p>$$\sideset{^n_k}{^x_y}a$$</p><h2 id="括号"><a href="#括号" class="headerlink" title="括号"></a>括号</h2><p>在 markdown 语法中，, $, {, }, _都是有特殊含义的，所以需要加\转义。小括号与方括号可以使用原始的() [] 大括号需要转义\也可以使用\lbrace和 \rbrace</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$ \\&#123;x<span class="emphasis">*y\\&#125; $$  --注：大括号在markdown中已有一次转义，在mathjax中还要再转一次，所以为两个斜杠</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">$$\lbrace x*</span>y \rbrace$$</span><br></pre></td></tr></table></figure><p>显示效果：</p><p>$$ \{x*y\} $$</p><p>$$\lbrace x*y \rbrace$$</p><p>原始符号不会随着公式大小自动缩放，需要使用 \left 和 \right 来实现自动缩放：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$\left \lbrace \sum<span class="emphasis">_&#123;i=0&#125;^n i^3 = \frac&#123;(n^2+n)(n+6)&#125;&#123;9&#125; \right \rbrace$$</span></span><br></pre></td></tr></table></figure><p>显示效果：</p><p>$$\left \lbrace \sum_{i&#x3D;0}^n i^3 &#x3D; \frac{(n^2+n)(n+6)}{9} \right \rbrace$$</p><p>不使用\left 和 \right的效果：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$ \lbrace \sum<span class="emphasis">_&#123;i=0&#125;^n i^3 = \frac&#123;(n^2+n)(n+6)&#125;&#123;9&#125;  \rbrace$$</span></span><br></pre></td></tr></table></figure><p>显示效果：</p><p>$$ \lbrace \sum_{i&#x3D;0}^n i^3 &#x3D; \frac{(n^2+n)(n+6)}{9}  \rbrace$$</p><h2 id="分数与开方"><a href="#分数与开方" class="headerlink" title="分数与开方"></a>分数与开方</h2><p>可以使用\frac 或者 \over 实现分数的显示：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$\frac xy$</span><br><span class="line">$ x+3 \over y+5 $</span><br></pre></td></tr></table></figure><p>显示为 $\frac xy$ 和 $ x+3 \over y+5 $</p><p>开方使用\sqrt:</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$ \sqrt&#123;x^5&#125; $</span><br><span class="line">$ \sqrt[3]&#123;\frac xy&#125; $</span><br></pre></td></tr></table></figure><p>显示为 $ \sqrt{x^5} $ 和 $ \sqrt[3]{\frac xy} $</p><h2 id="求和与积分"><a href="#求和与积分" class="headerlink" title="求和与积分"></a>求和与积分</h2><p>求和使用\sum,可加上下标，积分使用\int可加上下限，双重积分用\iint</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$ \sum<span class="emphasis">_&#123;i=0&#125;^n $</span></span><br><span class="line"><span class="emphasis">$ \int_</span>1^\infty $</span><br><span class="line">$ \iint<span class="emphasis">_1^\infty $</span></span><br></pre></td></tr></table></figure><p>显示为 $ \sum_{i&#x3D;0}^n $ 和 $ \int_1^\infty $ 以及 $ \iint_1^\infty $</p><h2 id="极限"><a href="#极限" class="headerlink" title="极限"></a>极限</h2><p>极限使用\lim:</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$ \lim<span class="emphasis">_&#123;x \to 0&#125; $</span></span><br></pre></td></tr></table></figure><p>显示为: $ \lim_{x \to 0} $</p><h2 id="表格与矩阵"><a href="#表格与矩阵" class="headerlink" title="表格与矩阵"></a>表格与矩阵</h2><p>表格样式lcr表示居中，|加入一条竖线，\hline表示行间横线，列之间用&amp;分隔，行之间用\分隔：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$\begin&#123;array&#125;&#123;c|lcr&#125;</span><br><span class="line">n &amp; \text&#123;Left&#125; &amp; \text&#123;Center&#125; &amp; \text&#123;Right&#125; \\\\</span><br><span class="line">\hline</span><br><span class="line">1 &amp; 1.97 &amp; 5 &amp; 12 \\\\</span><br><span class="line">2 &amp; -11 &amp; 19 &amp; -80 \\\\</span><br><span class="line">3 &amp; 70 &amp; 209 &amp; 1+i \\\\</span><br><span class="line">\end&#123;array&#125;$$</span><br></pre></td></tr></table></figure><p>显示效果：</p><p>$$\begin{array}{c|lcr}<br>n &amp; \text{Left} &amp; \text{Center} &amp; \text{Right} \\<br>\hline<br>1 &amp; 1.97 &amp; 5 &amp; 12 \\<br>2 &amp; -11 &amp; 19 &amp; -80 \\<br>3 &amp; 70 &amp; 209 &amp; 1+i \\<br>\end{array}$$</p><h2 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$\left[</span><br><span class="line">\begin&#123;matrix&#125;</span><br><span class="line">V<span class="emphasis">_A \\\\</span></span><br><span class="line"><span class="emphasis">V_</span>B \\\\</span><br><span class="line">V<span class="emphasis">_C \\\\</span></span><br><span class="line"><span class="emphasis">\end&#123;matrix&#125;</span></span><br><span class="line"><span class="emphasis">\right] =</span></span><br><span class="line"><span class="emphasis">\left[</span></span><br><span class="line"><span class="emphasis">\begin&#123;matrix&#125;</span></span><br><span class="line"><span class="emphasis">1 &amp; 0 &amp; L \\\\</span></span><br><span class="line"><span class="emphasis">-cosψ &amp; sinψ &amp; L \\\\</span></span><br><span class="line"><span class="emphasis">-cosψ &amp; -sinψ &amp; L</span></span><br><span class="line"><span class="emphasis">\end&#123;matrix&#125;</span></span><br><span class="line"><span class="emphasis">\right]</span></span><br><span class="line"><span class="emphasis">\left[</span></span><br><span class="line"><span class="emphasis">\begin&#123;matrix&#125;</span></span><br><span class="line"><span class="emphasis">V_</span>x \\\\</span><br><span class="line">V<span class="emphasis">_y \\\\</span></span><br><span class="line"><span class="emphasis">W \\\\</span></span><br><span class="line"><span class="emphasis">\end&#123;matrix&#125;</span></span><br><span class="line"><span class="emphasis">\right] $$</span></span><br></pre></td></tr></table></figure><p>显示效果:</p><p>$$\left[<br>\begin{matrix}<br>V_A \\<br>V_B \\<br>V_C \\<br>\end{matrix}<br>\right] &#x3D;<br>\left[<br>\begin{matrix}<br>1 &amp; 0 &amp; L \\<br>-cosψ &amp; sinψ &amp; L \\<br>-cosψ &amp; -sinψ &amp; L<br>\end{matrix}<br>\right]<br>\left[<br>\begin{matrix}<br>V_x \\<br>V_y \\<br>W \\<br>\end{matrix}<br>\right] $$</p><hr><p>综合测试：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$\frac&#123;\partial u&#125;&#123;\partial t&#125;</span><br><span class="line">= h^2 \left( \frac&#123;\partial^2 u&#125;&#123;\partial x^2&#125; +</span><br><span class="line">\frac&#123;\partial^2 u&#125;&#123;\partial y^2&#125; +</span><br><span class="line">\frac&#123;\partial^2 u&#125;&#123;\partial z^2&#125;\right)$$</span><br><span class="line"></span><br><span class="line">$$ \lbrace \sum<span class="emphasis">_&#123;i=0&#125;^n i^3 = \frac&#123;(n^2+n)(n+6)&#125;&#123;9&#125;  \rbrace$$</span></span><br></pre></td></tr></table></figure><p>显示效果:</p><p>$$\frac{\partial u}{\partial t}<br>&#x3D; h^2 \left( \frac{\partial^2 u}{\partial x^2} +<br>\frac{\partial^2 u}{\partial y^2} +<br>\frac{\partial^2 u}{\partial z^2}\right)$$</p><p>$$ \lbrace \sum_{i&#x3D;0}^n i^3 &#x3D; \frac{(n^2+n)(n+6)}{9}  \rbrace$$</p>]]></content>
    
    
    <summary type="html">测试MathJax语法</summary>
    
    
    
    <category term="markdown" scheme="https://xbmlz.github.io/categories/markdown/"/>
    
    
    <category term="markdown" scheme="https://xbmlz.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Markdown Test</title>
    <link href="https://xbmlz.github.io/markdown-test/"/>
    <id>https://xbmlz.github.io/markdown-test/</id>
    <published>2022-07-20T14:23:37.000Z</published>
    <updated>2023-09-14T03:44:16.347Z</updated>
    
    <content type="html"><![CDATA[<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>不同数量的<code>#</code>可以完成不同的标题，如下：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>粗体、斜体、粗体和斜体，删除线，需要在文字前后加不同的标记符号。如下：</p><p><strong>这个是粗体</strong></p><p><em>这个是斜体</em></p><p><em><strong>这个是粗体加斜体</strong></em></p><p><del>这里想用删除线</del></p><p>注：如果想给字体换颜色、字体或者居中显示，需要使用内嵌HTML来实现。</p><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><p>无序列表的使用，在符号<code>-</code>后加空格使用。如下：</p><ul><li>无序列表 1</li><li>无序列表 2</li><li>无序列表 3</li></ul><p>如果要控制列表的层级，则需要在符号<code>-</code>前使用空格。如下：</p><ul><li>无序列表 1</li><li>无序列表 2<ul><li>无序列表 2.1</li><li>无序列表 2.2<ul><li>无序列表 2.1.1</li><li>无序列表 2.1.2</li></ul></li></ul></li></ul><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>有序列表的使用，在数字及符号<code>.</code>后加空格后输入内容，如下：</p><ol><li>有序列表 1</li><li>有序列表 2</li><li>有序列表 3</li></ol><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>引用的格式是在符号<code>&gt;</code>后面书写文字。如下：</p><blockquote><p>读一本好书，就是在和高尚的人谈话。 ——歌德</p></blockquote><blockquote><p>雇用制度对工人不利，但工人根本无力摆脱这个制度。 ——阮一峰</p></blockquote><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>微信公众号仅支持公众号文章链接，即域名为<code>https://mp.weixin.qq.com/</code>的合法链接。使用方法如下所示：</p><p>对于该论述，欢迎读者查阅之前发过的文章，<a href="https://mp.weixin.qq.com/s/s5IhxV2ooX3JN_X416nidA">你是《未来世界的幸存者》么？</a><br><a id="jump_8"></a></p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>插入图片，格式如下：</p><p><img src="https://www.nginx.cn/wp-content/uploads/2020/03/qrcode_for_gh_82cf87d482f0_258.jpg" alt="这里写图片描述"></p><p>支持 jpg、png、gif、svg 等图片格式，<strong>其中 svg 文件仅可在微信公众平台中使用</strong>，svg 文件示例如下：</p><p><img src="https://markdown.com.cn/images/i-am-svg.svg"></p><p>支持图片<strong>拖拽和截图粘贴</strong>到编辑器中。</p><p>注：支持图片 <em><strong>拖拽和截图粘贴</strong></em> 到编辑器中，仅支持 https 的图片，图片粘贴到微信时会自动上传微信服务器。</p><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>可以在一行中用三个以上的减号来建立一个分隔线，同时需要在分隔线的上面空一行。如下：</p><hr><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>可以使用冒号来定义表格的对齐方式，如下：</p><table><thead><tr><th align="left">姓名</th><th align="center">年龄</th><th align="right">工作</th></tr></thead><tbody><tr><td align="left">小可爱</td><td align="center">18</td><td align="right">吃可爱多</td></tr><tr><td align="left">小小勇敢</td><td align="center">20</td><td align="right">爬棵勇敢树</td></tr><tr><td align="left">小小小机智</td><td align="center">22</td><td align="right">看一本机智书</td></tr></tbody></table><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><blockquote><p>支持平台：微信代码主题仅支持微信公众号！其他主题无限制。</p></blockquote><p>如果在一个行内需要引用代码，只要用反引号引起来就好，如下：</p><p>Use the <code>printf()</code> function.</p><p>在需要高亮的代码块的前一行及后一行使用三个反引号，同时<strong>第一行反引号后面表示代码块所使用的语言</strong>，如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// FileName: HelloWorld.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">  <span class="comment">// Java 入口程序，程序从此入口</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;Hello,World!&quot;</span>); <span class="comment">// 向控制台打印一条语句</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">测试markdown语法</summary>
    
    
    
    <category term="markdown" scheme="https://xbmlz.github.io/categories/markdown/"/>
    
    
    <category term="markdown" scheme="https://xbmlz.github.io/tags/markdown/"/>
    
  </entry>
  
</feed>
